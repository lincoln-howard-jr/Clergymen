{"version":3,"sources":["components/AudioPlayer.js","components/Headers.js","lib/auth.js","lib/poolDetails.js","hooks/index.js","hooks/useAuth.js","hooks/useCharacters.js","hooks/useForm.js","hooks/useRouter.js","hooks/useEpisodes.js","hooks/useChannelInfo.js","AppProvider.js","hooks/useUploads.js","img/nav.svg","components/Nav.js","pages/Auth.js","img/rotate.svg","pages/Characters.js","img/play.svg","pages/Episodes.js","pages/CreateCharacter.js","pages/CreateEpisode.js","pages/EditCharacter.js","components/StringArrayInput.js","pages/About.js","App.js","index.js"],"names":["ts","seconds","Math","floor","slice","src","playing","title","togglePlay","photo","useState","width","setWidth","currTime","setCurrTime","duration","setDuration","audioRef","useRef","useEffect","current","play","pause","id","onClick","className","style","onTimeUpdate","e","currentTime","ref","autoPlay","H1","children","short","H2","H3","authDetails","Pool","AmazonCognitoIdentity","UserPoolId","ClientId","IdentityPoolId","cognitoUser","accessToken","refreshToken","headers","get","Headers","login","Username","Password","Promise","resolve","reject","authenticateUser","onSuccess","onFailure","getCurrentUser","signOut","a","useAuth","onSessionActive","user","setUser","err","setErr","_login","getSession","session","getAccessToken","getJwtToken","RefreshToken","getRefreshToken","getToken","logout","window","location","reload","init","refreshSession","useCharacters","characters","setCharacters","getCharacters","fetch","req","json","createCharacter","character","method","post","body","JSON","stringify","res","updateCharacter","useForm","onSubmit","v","console","log","defaultValues","validation","values","setValues","validationErrors","set","name","target","value","Object","assign","status","validate","throwErr","errors","Error","submit","result","useRouter","pathname","page","setPage","redirect","path","data","history","pushState","useEpisodes","episodes","setEpisodes","getEpisodes","createEpisode","useChannelInfo","channelInfo","setChannelInfo","getChannel","updateChannelInfo","channel","AppContext","createContext","useApp","React","useContext","AppProvider","podcastSrc","setPodcastSrc","podcastTitle","setPodcastTitle","podcastCoverPhoto","setPodcastCoverPhoto","podcastPlaying","setPodcastPlaying","frozen","setFrozen","uploads","createUpload","upload","useUploads","router","auth","Provider","setPodcast","episode","audioSource","url","coverPhoto","freeze","message","display","alignItems","justifyContent","backgroundColor","height","zIndex","position","left","top","padding","border","AudioPlayer","Nav","open","setOpen","overlayRef","rac","NavSVG","Auth","username","setUsername","password","setPassword","runLogin","alert","placeholder","onChange","type","Characters","flipped","setFlipped","map","includes","actorName","characterName","fl","filter","_id","RotateSVG","margin","actorLongDescription","characterLongDescription","characterPicture","actorPicture","Episodes","PlaySVG","seasonNumber","episodeNumber","longDescription","CreateCharacter","characterPic","setCharacterPic","actorPic","setActorPic","characterPictureRef","actorPictureRef","clickCharacterPicture","click","clickActorPicture","actuallyUploadCharacterPicture","unfreeze","filename","files","contentType","uploadUrl","actuallyUploadActorPicture","updateHeight","scrollHeight","startsWith","onFocus","onInput","accept","hidden","CreateEpisode","parseInt","coverPhotoUrl","setCoverPhotoUrl","audioSourceUrl","setAudioSourceUrl","uploadCoverPhoto","uploadCoverPhotoRef","uploadAudioSource","uploadAudioSourceRef","EditCharacter","setCharacter","cid","split","match","c","_character","length","getCharacter","val","char","defaultValue","characterShortDescription","actorShortDescription","StringArrayInput","array","setArray","index","arr","removeSection","splice","text","About","editor","edit","imageRef","image","setImage","clickImage","actuallyUploadImage","preventDefault","author","copyright","category","subcategory","description","Array","isArray","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.166c3eda.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\"\n\nconst ts = seconds => `${Math.floor (seconds / 60)}:${('00' + Math.floor (seconds % 60)).slice (-2)}`;\n\nexport default function ({src, playing, title, togglePlay, photo}) {\n  const [width, setWidth] = useState ('0%');\n  const [currTime, setCurrTime] = useState (0);\n  const [duration, setDuration] = useState (0);\n  const audioRef = useRef ();\n  const onProgress = e => {\n    setWidth (`${80 * (audioRef.current.currentTime / audioRef.current.duration)}%`);\n    setCurrTime (audioRef.current.currentTime);\n    setDuration (audioRef.current.duration);\n  }\n  useEffect (() => {\n    if (playing) audioRef.current.play ();\n    else audioRef.current.pause ();\n  }, [playing]);\n  return (\n    <footer id=\"audio-player\" onClick={togglePlay}>\n      <section className=\"audio-player-container\">\n        <section className=\"audio-player-time\">\n          {\n            ts (currTime)\n          } / {\n            ts (duration)\n          }\n        </section>\n        <section className=\"audio-player-title\">{title}</section>\n        <section className=\"audio-player-image\">\n          <img src={photo} />\n        </section>\n        <section style={{width}} className=\"progress\" />\n      </section>\n      <audio onTimeUpdate={onProgress} ref={audioRef} src={src} autoPlay />\n    </footer>\n  )\n}","export function H1 ({children, short}) {\n  return (\n    <>\n      <h1>\n        {children}\n      </h1>\n      <h1 className=\"short\">\n        {short ? short : children}\n      </h1>\n    </>\n  )\n}\n\nexport function H2 ({children, short}) {\n  return (\n    <>\n      <h2>\n        {children}\n      </h2>\n      <h2 className=\"short\">\n        {short ? short : children}\n      </h2>\n    </>\n  )\n}\n\nexport function H3 ({children, short}) {\n  return (\n    <>\n      <h3>\n        {children}\n      </h3>\n      <h3 className=\"short\">\n        {short ? short : children}\n      </h3>\n    </>\n  )\n}\n\nexport function H4 ({children, short}) {\n  return (\n    <>\n      <h4>\n        {children}\n      </h4>\n      <h4 className=\"short\">\n        {short ? short : children}\n      </h4>\n    </>\n  )\n}\n\nexport function H5 ({children, short}) {\n  return (\n    <>\n      <h5>\n        {children}\n      </h5>\n      <h5 className=\"short\">\n        {short ? short : children}\n      </h5>\n    </>\n  )\n}\n\nexport function H6 ({children, short}) {\n  return (\n    <>\n      <h6>\n        {children}\n      </h6>\n      <h6 className=\"short\">\n        {short ? short : children}\n      </h6>\n    </>\n  )\n}","import * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\nimport poolDetails from './poolDetails';\n\nlet authDetails = null;\nlet Pool = new AmazonCognitoIdentity.CognitoUserPool (poolDetails);\nlet cognitoUser = null;\nlet accessToken = null;\nlet refreshToken = null;\n\nexport const headers = {\n  get get () {\n    return new Headers ({\n      'x-amz-access-token': accessToken\n    });\n  },\n  get post () {\n    return new Headers ({\n      'x-amz-access-token': accessToken,\n      'Content-Type': 'application/json'\n    });\n  }\n}\nexport const login = (Username, Password) => new Promise ((resolve, reject) => {\n  try {\n    authDetails = new AmazonCognitoIdentity.AuthenticationDetails ({Username, Password});\n    cognitoUser = new AmazonCognitoIdentity.CognitoUser ({Username, Pool});\n    cognitoUser.authenticateUser (authDetails, {\n      onSuccess: () => resolve (),\n      onFailure: () => reject ()\n    })\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const getCurrentUser = () => new Promise ((resolve, reject) => {\n  try {\n    cognitoUser = Pool.getCurrentUser ();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const retrieveAccessToken = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cognito user must be defined to get access token';\n    cognitoUser.getSession ((e, session) => {\n      if (e) return reject (e);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const refreshSession = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cannot refresh empty cognito user';\n    if (!refreshToken) throw 'Cannot refresh empty refresh token';\n    cognitoUser.refreshSession (refreshToken, (err, session) => {\n      if (err) return reject (err);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const signOut = async () => new Promise (async (resolve, reject) => {\n  try {\n    await cognitoUser.signOut();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\n// export const register = async (Username, Password) => new Promise (async (resolve, reject) => {\n//   const customAttributeId = new AmazonCognitoIdentity.CognitoUserAttribute ({Name: 'custom:id', Value: id ()})\n//   const attributeList = [attributePhoneNumber, customAttributeId];\n//   Pool.signUp (Username, Password, attributeList, null, (err, result) => {\n//     if (err) return reject (err);\n//     cognitoUser = result.user;\n//     resolve ();\n//   })\n// });\n","export default {\n  UserPoolId: 'us-east-1_UW4qNlUmI',\n  ClientId: '5kurv3o1l70p414j83ka7i16sc',\n  IdentityPoolId: 'us-east-1:2cc114d3-6d89-4f65-b6e5-0b2902209f61'\n}","// imports\nimport _useAuth from './useAuth';\nimport _useCharacters from './useCharacters';\nimport _useForm from './useForm';\nimport _router from './useRouter';\nimport _episodes from './useEpisodes';\nimport _channel from './useChannelInfo';\n// exports\nexport const useAuth = _useAuth;\nexport const useCharacters = _useCharacters;\nexport const useForm = _useForm;\nexport const useRouter = _router;\nexport const useEpisodes = _episodes;\nexport const useChannelInfo = _channel;","import {useState, useEffect} from 'react';\nimport {getCurrentUser, login as _login, refreshSession, retrieveAccessToken, signOut} from '../lib/auth';\n\n// auth hook\nexport default function useAuth (onSessionActive) {\n\n  // state management\n  const [user, setUser] = useState (null);\n  const [err, setErr] = useState (null);\n\n  // login method\n  const login = async (Username, Password) => new Promise (async (resolve, reject) => {\n    try {\n      await _login (Username, Password);\n      await getSession ();\n      setUser (true);\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  // method to get credentials\n  const getSession = async () => new Promise (async (resolve, reject) => {\n    try {\n      await getCurrentUser ();\n      await retrieveAccessToken ();\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  // end session\n  const logout = async () => new Promise (async (resolve, reject) => {\n    try {\n      await signOut ();\n      window.location.reload ();\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  })\n\n  // run to test the waters\n  const init = async () => {\n    try {\n      await getCurrentUser ();\n      await getSession ();\n      await refreshSession ();\n      setUser (true);\n    } catch (e) {\n      setErr (e);\n      setUser (false);\n    }\n  }\n\n  // call callback when first logged in\n  useEffect (() => {\n    if (user && onSessionActive) onSessionActive ();\n  }, [user]);\n\n  // immediately run this\n  useEffect (() => {\n    init ();\n  }, [])\n\n  //\n  return {user, err, login, logout};\n\n}","import { useEffect, useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useCharacters () {\n\n  // state management\n  const [characters, setCharacters] = useState ([]);\n  const [err, setErr] = useState (null);\n\n  // get all characters\n  const getCharacters = async () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters');\n      let characters = await req.json ();\n      setCharacters (characters);\n      resolve (characters);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    } \n  })\n\n  // mutators\n  const createCharacter = async character => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters', {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (character)\n      })\n      let res = await req.json ();\n      resolve (res);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  const updateCharacter = async (id, character) => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters/${id}`, {\n        method: 'PUT',\n        headers: headers.post,\n        body: JSON.stringify (character)\n      })\n      let res = await req.json ();\n      resolve (res);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  useEffect (() => {\n    getCharacters ();\n  }, []);\n\n  return {characters, err, getCharacters, createCharacter, updateCharacter};\n\n}","import { useState } from \"react\";\n\n//  onSubmit : async Function\n//    action performed on when form.submit is called\n//  defaultValues : Object\n//    the default values for the form\n//  validation : Object\n//    an object that maps field names to validation functions\nexport default function useForm (onSubmit=v=>console.log (v), defaultValues={}, validation={}) {\n\n  const [values, setValues] = useState (defaultValues);\n  const [validationErrors, setErr] = useState ({});\n\n  const set = name => (e) => {\n    if (e.target && e.target.value) return setValues (values => Object.assign (values, {[name]: e.target.value}));\n    setValues (values => Object.assign (values, {[name]: e}));\n  }\n\n  const get = name => {\n    return values [name];\n  }\n\n  const status = name => {\n    return validationErrors [name] ? 'invalid' : 'valid';\n  }\n\n  const validate = () => {\n    let throwErr = false;\n    for (const name in validation) {\n      validation [name] (values [name]) ?\n        setErr (errors => Object.assign (errors, {[name]: false}))\n        :\n        throwErr = true; setErr (errors => Object.assign (errors, {[name]: true}))\n      ;\n    }\n    if (throwErr) {\n      console.log (validationErrors);\n      throw new Error ('validation error');\n    }\n  }\n\n  const submit = async () => new Promise (async (resolve,reject) => {\n    try {\n      validate ();\n      let result = await onSubmit (values);\n      resolve (result);\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  return {set, get, status, submit};\n\n}","import { useState } from \"react\"\n\nexport default function useRouter () {\n  \n  const [page, setPage] = useState (window.location.pathname);\n  \n  const redirect = (path, data={}) => () => {\n    setPage (path);\n    window.history.pushState (data, path, path);\n  }\n\n  return {page, redirect}\n}","import { useEffect, useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useEpisodes () {\n\n  // state management\n  const [episodes, setEpisodes] = useState ([]);\n  const [err, setErr] = useState (null);\n\n  const getEpisodes = () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes`);\n      let data = await req.json ();\n      setEpisodes (data);\n      resolve (data);\n    } catch (e) {\n      reject (e);\n    }\n  })\n  \n  const createEpisode = body => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes`, {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let data = await req.json ();\n      resolve (data);\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  useEffect (() => {\n    getEpisodes ();\n  }, []);\n\n  return {episodes, err, getEpisodes, createEpisode};\n\n}","import { useEffect, useState } from \"react\"\nimport { headers } from \"../lib/auth\";\n\nexport default function useUploads () {\n\n  const [channelInfo, setChannelInfo] = useState (null);\n  const [err, setErr] = useState (null);\n\n  const getChannel = async () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/channel');\n      let data = await req.json ();\n      setChannelInfo (data);\n      resolve (data);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  const updateChannelInfo = body => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/channel', {\n        method: 'PUT',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let channel = await req.json ();\n      setChannelInfo (Object.assign (channelInfo, channel));\n      resolve ();\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  useEffect (() => {\n    getChannel ();\n  }, []);\n\n  return {channelInfo, err, updateChannelInfo}\n}","// create a context usable across the whole application\nimport React, { createContext, useState } from \"react\";\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport {H1} from './components/Headers';\nimport {useAuth, useCharacters, useForm, useRouter, useEpisodes, useChannelInfo} from './hooks';\nimport useUploads from \"./hooks/useUploads\";\n// react context api\nconst AppContext = createContext ();\nexport const useApp = () => React.useContext (AppContext);\n\n// the component\nexport default function AppProvider ({children}) {\n\n  // podcast player\n  const [podcastSrc, setPodcastSrc] = useState (null);\n  const [podcastTitle, setPodcastTitle] = useState (null);\n  const [podcastCoverPhoto, setPodcastCoverPhoto] = useState (null);\n  const [podcastUpNext, setPodcastUpNext] = useState ([]);\n  const [podcastPlaying, setPodcastPlaying] = useState (true);\n\n  const togglePlay = () => setPodcastPlaying (!podcastPlaying);\n  const setPodcast = episode => e => {\n    setPodcastSrc (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${episode.audioSource.url}`)\n    setPodcastCoverPhoto (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${episode.coverPhoto.url}`);\n    setPodcastTitle (episode.title);\n  }\n\n  // freeze/unfreeze animation\n  const [frozen, setFrozen] = useState (false);\n  const freeze = message => {\n    setFrozen (message);\n    return function unfreeze () {\n      setFrozen (false);\n    }\n  }\n\n  // hooks\n  const characters = useCharacters ();\n  const episodes = useEpisodes ();\n  const uploads = useUploads ();\n  const router = useRouter ();\n  const channel = useChannelInfo ();\n  // called when the user is authenticated\n  function onSessionActive () {\n  }\n  // auth hook\n  const auth = useAuth (onSessionActive);\n\n  // just wrap the whole app component in this\n  return (\n    <AppContext.Provider value={{router, auth, characters, uploads, episodes, channel, togglePlay, setPodcast, freeze, useForm}} >\n      <div style={{\n        display: (!frozen ? 'none' : 'grid'),\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ccccccaa',\n        width: '100vw',\n        height: '100vh',\n        zIndex: 10,\n        position: 'fixed',\n        left: 0,\n        top: 0\n      }}>\n        <span style={{backgroundColor: 'white', padding: 50, border: '1px solid black'}}>\n          {frozen === true ? '' : <H1>{frozen}</H1>}\n        </span>\n      </div>\n      {children}\n      {\n        !!podcastSrc &&\n        <AudioPlayer src={podcastSrc} title={podcastTitle} photo={podcastCoverPhoto} togglePlay={togglePlay} playing={podcastPlaying} />\n      }\n    </AppContext.Provider>\n  )\n}","import { useState } from \"react\"\nimport { headers } from \"../lib/auth\";\n\nexport default function useUploads () {\n\n  const [err, setErr] = useState (null);\n\n  const createUpload = body => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/uploads', {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let upload = await req.json ();\n      resolve (upload);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  return {err, createUpload}\n}","export default __webpack_public_path__ + \"static/media/nav.de37125c.svg\";","import { useState, useRef } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport NavSVG from '../img/nav.svg';\n\nexport default function Nav () {\n  const {router: {redirect, page}} = useApp ();\n  const [open, setOpen] = useState (false);\n  const overlayRef = useRef ();\n  const close = e => {\n    if (e.target === overlayRef.current) {\n      setOpen (false);\n    }\n  }\n  const rac = path => e => {\n    redirect (path) ();\n    setOpen (false);\n  }\n  return (\n    <>\n      <nav onClick={() => setOpen (true)} id=\"nav\" className={open ? 'open' : ''}>\n        <img src={NavSVG} />\n      </nav>\n      <div id=\"nav-overlay\" ref={overlayRef} onClick={close}>\n        <ul>\n          <li onClick={rac ('/about')}>About</li>\n          <li onClick={rac ('/episodes')}>Episodes</li>\n          <li onClick={rac ('/characters')}>Characters</li>\n          <li onClick={rac ('/contact')}>Contact</li>\n        </ul>\n      </div>\n    </>\n  )\n}","import { useState } from 'react';\nimport {useApp} from '../AppProvider';\nimport { H2 } from '../components/Headers';\n\nfunction Auth () {\n  \n  const {router: {page}, auth: {user, login}} = useApp ();\n\n  const [username, setUsername] = useState ('');\n  const [password, setPassword] = useState ('');\n  const runLogin = async e => {\n    try {\n      await login (username, password);\n      alert ('success');\n    } catch (e) {\n      console.log (e);\n    }\n  }\n  \n  if (page !== '/admin') return '';\n  return user ? '' : (\n    <main className=\"\">\n      <H2>Log In</H2>\n      <div className=\"input-group\">\n        <label>Username</label>\n        <input value={username} placeholder=\"Username\" onChange={e => setUsername (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <label>Password</label>\n        <input type=\"password\" value={password} placeholder=\"password\" onChange={e => setPassword (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <button onClick={runLogin}>Log In</button>\n      </div>\n    </main>\n  )\n}\n\nexport default Auth","export default __webpack_public_path__ + \"static/media/rotate.6f436ac3.svg\";","import { useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H3} from '../components/Headers'\nimport RotateSVG from '../img/rotate.svg'\n\nexport default function Characters () {\n  \n  const {auth: {user}, router: {page, redirect}, characters: {characters}} = useApp ();\n\n  const [flipped, setFlipped] = useState ([]);\n\n  const flip = id => e => {\n    if (flipped.includes (id)) return setFlipped (fl => fl.filter (_id => _id !== id));\n    setFlipped (fl => [...fl, id]);\n  }\n\n  if (page !== '/characters') return '';\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Characters:</H1>\n        {\n          user &&\n          <a onClick={redirect ('/create-character')}>Add Character</a>\n        }\n      </div>\n      <main>\n        {\n          characters.map (character => (\n            <div className={flipped.includes (character.id) ? 'character-card actor' : \"character-card\"}>\n              <div className=\"character-played-by\">\n                <header>\n                  <H3 short={flipped.includes (character.id) ? character.actorName : character.characterName}>\n                    {flipped.includes (character.id) ? character.actorName : character.characterName}\n                  </H3>\n                  <img className=\"invert\" onClick={flip (character.id)} src={RotateSVG} />\n                </header>\n                <hr style={{margin: '25px 25%'}} />\n                {\n                  user &&\n                  <div className=\"text-center\">\n                    <a onClick={redirect (`/edit-character/${character.id}`)}>Edit</a>\n                  </div>\n                }\n              </div>\n              <div className=\"character-info\">\n                <span>{flipped.includes (character.id) ? character.actorLongDescription : character.characterLongDescription}</span>\n              </div>\n              {\n                (!flipped.includes (character.id) && character.characterPicture && character.characterPicture.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${character.characterPicture.url}`} />\n                  </div>\n                )\n              }\n              {\n                (flipped.includes (character.id) && character.characterPicture && character.characterPicture.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${character.actorPicture.url}`} />\n                  </div>\n                )\n              }\n            </div>\n          ))\n        }\n      </main>\n    </>\n  )\n\n}","export default __webpack_public_path__ + \"static/media/play.c0a9fbaf.svg\";","import { useApp } from \"../AppProvider\";\nimport {H1, H3} from '../components/Headers'\nimport PlaySVG from '../img/play.svg'\n\nexport default function Episodes () {\n  \n  const {auth: {user}, router: {page, redirect}, episodes: {episodes}, setPodcast} = useApp ();\n\n  if (page !== '/episodes') return '';\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Episodes:</H1>\n        {\n          user &&\n          <a onClick={redirect ('/create-episode')}>Add Episode</a>\n        }\n      </div>\n      <main>\n        {\n          episodes.map (episode => (\n            <div className=\"character-card\">\n              <div className=\"character-played-by\">\n                <header>\n                  <H3>{episode.title}</H3>\n                  <img className=\"invert\" onClick={setPodcast (episode)} src={PlaySVG} />\n                </header>\n                <hr style={{margin: '25px 25%'}} />\n                {\n                  user &&\n                  <div className=\"text-center\">\n                    <a onClick={redirect (`/edit-episode/${episode.id}`)}>Edit</a>\n                  </div>\n                }\n              </div>\n              <div className=\"character-info\">\n                <H3 short={`S${episode.seasonNumber}, E${episode.episodeNumber}`}>Season {episode.seasonNumber}, Episode {episode.episodeNumber}</H3>\n                <span>{episode.longDescription}</span>\n              </div>\n              {\n                (episode.coverPhoto && episode.coverPhoto.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${episode.coverPhoto.url}`} />\n                  </div>\n                )\n              }\n            </div>\n          ))\n        }\n      </main>\n    </>\n  )\n\n}","import { useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function CreateCharacter () {\n  \n  const {auth: {user}, router: {page, redirect}, characters: {createCharacter}, uploads: {createUpload}, useForm, freeze} = useApp ();\n\n  const {set, get, status, submit} = useForm (createCharacter);\n  const [characterPic, setCharacterPic] = useState (false);\n  const [actorPic, setActorPic] = useState (false);\n  const characterPictureRef = useRef ();\n  const actorPictureRef = useRef ();\n\n  const clickCharacterPicture = async () => {\n    characterPictureRef.current.click ();\n  }\n\n  const clickActorPicture = async () => {\n    actorPictureRef.current.click ();\n  }\n\n  const actuallyUploadCharacterPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: characterPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': characterPictureRef.current.files [0].type}),\n        body: characterPictureRef.current.files [0]\n      })\n      console.log (upload);\n      set ('characterPicture') (upload.id);\n      setCharacterPic (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n    \n  const actuallyUploadActorPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: actorPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      console.log (upload);\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': actorPictureRef.current.files [0].type}),\n        body: actorPictureRef.current.files [0]\n      })\n      set ('actorPicture') (upload.id);\n      setActorPic (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n  if (!user) return '';\n  if (!page.startsWith ('/create-character')) return '';\n\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Character\">Create Character</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Character</H2>\n        </header>\n        <section>\n          <H3>Character Info</H3>\n          <div className=\"input-group\">\n            <label>Character Name</label>\n            <input name=\"characterName\" value={get ('characterName')} onChange={set ('characterName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Short Description</label>\n            <input name=\"characterShortDescription\" value={get ('characterShortDescription')} onChange={set ('characterShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"characterLongDescription\" value={get ('characterLongDescription')} onChange={set ('characterLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Picture</label>\n            {\n              !characterPic &&\n              <p onClick={clickCharacterPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!characterPic &&\n              <img src={characterPic} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={characterPictureRef} onChange={actuallyUploadCharacterPicture} />\n          </div>\n        </section>\n        <section>\n          <H3>Actor Info</H3>\n          <div className=\"input-group\">\n            <label>Actor Name</label>\n            <input name=\"actorName\" value={get ('actorName')} onChange={set('actorName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Short Description</label>\n            <input name=\"actorShortDescription\" value={get ('actorShortDescription')} onChange={set ('actorShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"actorLongDescription\" value={get ('actorLongDescription')} onChange={set ('actorLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Picture</label>\n            {\n              !actorPic &&\n              <p onClick={clickActorPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!actorPic &&\n              <img src={actorPic} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={actorPictureRef} onChange={actuallyUploadActorPicture} />\n          </div>\n        </section>\n        <button onClick={submit}>Add Character</button>\n      </div>\n    </main>\n  )\n\n}","import { useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function CreateEpisode () {\n\n  const {router: {page}, auth: {user}, episodes: {createEpisode}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  const {get, set, submit} = useForm (values => {\n    let body = Object.assign (values, {\n      episodeNumber: parseInt (values.episodeNumber),\n      seasonNumber: parseInt (values.seasonNumber)\n    })\n    createEpisode (body);\n  });\n  const [coverPhotoUrl, setCoverPhotoUrl] = useState (null);\n  const [audioSourceUrl, setAudioSourceUrl] = useState (null);\n\n  const clickCoverPhoto = () => uploadCoverPhotoRef.current.click ();\n  const uploadCoverPhoto = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: uploadCoverPhotoRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadCoverPhotoRef.current.files [0].type}),\n        body: uploadCoverPhotoRef.current.files [0]\n      })\n      set ('coverPhoto') (upload.id);\n      setCoverPhotoUrl (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const clickAudioSource = () => uploadAudioSourceRef.current.click ();\n  const uploadAudioSource = async e => {\n    let unfreeze = freeze ('Uploading Podcast Audio - This May Take A Second!');\n    try {\n      let upload = await createUpload ({\n        filename: uploadAudioSourceRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadAudioSourceRef.current.files [0].type}),\n        body: uploadAudioSourceRef.current.files [0]\n      })\n      set ('audioSource') (upload.id);\n      setAudioSourceUrl (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const uploadCoverPhotoRef = useRef ();\n  const uploadAudioSourceRef = useRef ();\n\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n  if (!user) return '';\n  if (page !== '/create-episode') return '';\n  \n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Episode\">Create Episode</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Episode</H2>\n        </header>\n        <section>\n          <H3>Episode Info</H3>\n          <div className=\"input-group\">\n            <label>Episode Title</label>\n            <input name=\"title\" value={get ('title')} onChange={set ('title')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Season Number</label>\n            <input name=\"seasonNumber\" type='number' value={get ('seasonNumber')} onChange={set ('seasonNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Episode Number</label>\n            <input name=\"episodeNumber\" type='number' value={get ('episodeNumber')} onChange={set ('episodeNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Short Description</label>\n            <input name=\"shortDescription\" value={get ('shortDescription')} onChange={set ('shortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"longDescription\" value={get ('longDescription')} onChange={set ('longDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Release Date (doesn't have to be final!)</label>\n            <input name=\"releaseDate\" type=\"date\" value={get ('releaseDate')} onChange={set ('releaseDate')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Cover Photo</label>\n            {\n              !get ('coverPhoto') &&\n              <p onClick={clickCoverPhoto}>-- Upload Photo --</p>\n            }\n            {\n              !!get('coverPhoto') &&\n              <img src={coverPhotoUrl} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={uploadCoverPhotoRef} onChange={uploadCoverPhoto} />\n          </div>\n          <div className=\"input-group\">\n            <label>Audio File (mp3)</label>\n            {\n              !get ('audioSource') &&\n              <p onClick={clickAudioSource}>-- Upload Audio --</p>\n            }\n            {\n              !!get('audioSource') &&\n              <audio src={audioSourceUrl} />\n            }\n            <input type=\"file\" accept=\"audio/mp3\" hidden ref={uploadAudioSourceRef} onChange={uploadAudioSource} />\n          </div>\n        </section>\n        <button onClick={submit}>Add Character</button>\n      </div>\n    </main>\n  )\n\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function EditCharacter () {\n  \n  const {auth: {user}, router: {page}, characters: {characters, updateCharacter}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  \n  const [character, setCharacter] = useState (null);\n  const getCharacter = () => {\n    let cid = page.split ('/') [2];\n    let match = characters.filter (c => c.id === cid);\n    let _character = match.length ? match [0] : null;\n    setCharacter (_character);\n  }\n  useEffect (() => {\n    getCharacter ();\n  }, [characters, page])\n  const {set, submit} = useForm (val => updateCharacter (character.id, val));\n  const characterPictureRef = useRef ();\n  const actorPictureRef = useRef ();\n\n  const clickCharacterPicture = async () => {\n    characterPictureRef.current.click ();\n  }\n\n  const clickActorPicture = async () => {\n    actorPictureRef.current.click ();\n  }\n\n  const actuallyUploadCharacterPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: characterPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': characterPictureRef.current.files [0].type}),\n        body: characterPictureRef.current.files [0]\n      })\n      console.log (upload);\n      set ('characterPicture') (upload.id);\n      setCharacter (char => Object.assign (char, {characterPicture: {url: `https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${upload.url}`}}))\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n    \n  const actuallyUploadActorPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: actorPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      console.log (upload);\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': actorPictureRef.current.files [0].type}),\n        body: actorPictureRef.current.files [0]\n      })\n      set ('actorPicture') (upload.id);\n      setCharacter (char => Object.assign (char, {actorPicture: {url: `https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${upload.url}`}}))\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  if (!user) return '';\n  if (!page.startsWith ('/edit-character/')) return '';\n  if (!character) return '';\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short='Edit'>Edit {character.characterName}</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Character</H2>\n        </header>\n        <section>\n          <H3>Character Info</H3>\n          <div className=\"input-group\">\n            <label>Character Name</label>\n            <input name=\"characterName\" defaultValue={character.characterName} onChange={set ('characterName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Short Description</label>\n            <input name=\"characterShortDescription\" defaultValue={character.characterShortDescription} onChange={set ('characterShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Long Description</label>\n            <textarea name=\"characterLongDescription\" defaultValue={character.characterLongDescription} onChange={set ('characterLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Picture</label>\n            {\n              !character.characterPicture &&\n              <p onClick={clickCharacterPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!character.characterPicture &&\n              <div className=\"circle-image-container\">\n                <img onClick={clickCharacterPicture} src={`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${character.characterPicture.url}`} />\n              </div>\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={characterPictureRef} onChange={actuallyUploadCharacterPicture} />\n          </div>\n        </section>\n        <section>\n          <H3>Actor Info</H3>\n          <div className=\"input-group\">\n            <label>Actor Name</label>\n            <input name=\"actorName\" defaultValue={character.actorName} onChange={set('actorName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Short Description</label>\n            <input name=\"actorShortDescription\" defaultValue={character.actorShortDescription} onChange={set ('actorShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Long Description</label>\n            <textarea name=\"actorLongDescription\" defaultValue={character.actorLongDescription} onChange={set ('actorLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Picture</label>\n            {\n              !character.actorPicture &&\n              <p onClick={clickActorPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!character.actorPicture &&\n              <div className=\"circle-image-container\">\n                <img onClick={clickActorPicture} src={`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${character.actorPicture.url}`} />\n              </div>\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={actorPictureRef} onChange={actuallyUploadActorPicture} />\n          </div>\n        </section>\n        <button onClick={submit}>Submit Changes</button>\n      </div>\n    </main>\n  )\n\n}","import { useState } from \"react\"\n\nexport default function StringArrayInput ({onChange, defaultValue=[]}) {\n  const [array, setArray] = useState (defaultValue)\n  const set = index => e => {\n    let arr = [...array];\n    arr [index] = e.target.value;\n    setArray (arr);\n    onChange (arr);\n  }\n  const removeSection = index => () => {\n    let arr = [...array];\n    arr.splice (index, 1);\n    setArray (arr);\n    onChange (arr);\n  }\n  const addSection = () => {\n    let arr = [...array, ''];\n    setArray (arr);\n    onChange (arr);\n  }\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n  return (\n    <>\n      {\n        array.map ((text, index) => (\n          <section>\n            <textarea defaultValue={text} onChange={set (index)} onFocus={updateHeight} />\n            <button onClick={removeSection (index)}>Remove Section</button>\n          </section>\n        ))\n      }\n      <section>\n        <button onClick={addSection}>Add Section</button>\n      </section>\n    </>\n  )\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport { H1, H3 } from \"../components/Headers\";\nimport StringArrayInput from \"../components/StringArrayInput\";\n\nexport default function About () {\n  const {router: {page, redirect}, auth: {user}, channel: {channelInfo, updateChannelInfo}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  const [editor, edit] = useState (false); \n\n  const {set, get, submit} = useForm (values => {\n    updateChannelInfo (values);\n    edit (false);\n  });\n\n  const imageRef = useRef ();\n  const [image, setImage] = useState (null);\n  useEffect (() => {\n    if (channelInfo && channelInfo.image && channelInfo.image.url) setImage (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${channelInfo.image.url}`);\n  }, [channelInfo])\n\n  const clickImage = () => imageRef.current.click ();\n\n  const actuallyUploadImage = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: imageRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': imageRef.current.files [0].type}),\n        body: imageRef.current.files [0]\n      })\n      console.log (upload);\n      set ('image') (upload.id);\n      setImage (`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  if (page !== '/about' && page !== '/') return '';\n  if (!channelInfo) return '';\n\n  if (editor) return (\n    <>\n      <div className=\"text-center\">\n        <H1>Edit Channel Info</H1>\n      </div>\n      <main onSubmit={e => e.preventDefault ()} className=\"about-container\">\n        <div className=\"about\">\n          <section className=\"about-input\">\n            <p>Title</p>\n            <input onChange={set ('title')} defaultValue={channelInfo.title} />\n          </section>\n          <section className=\"about-input\">\n            <p>Author</p>\n            <input onChange={set ('author')} defaultValue={channelInfo.author} />\n          </section>\n          <section className=\"about-input\">\n            <p>Copyright</p>\n            <input onChange={set ('copyright')} defaultValue={channelInfo.copyright} />\n          </section>\n          <section className=\"about-input\">\n            <p>Category</p>\n            <input onChange={set ('category')} defaultValue={channelInfo.category} />\n          </section>\n          <section className=\"about-input\">\n            <p>Subcategory</p>\n            <input onChange={set ('subcategory')} defaultValue={channelInfo.subcategory} />\n          </section>\n          <section className=\"about-input\">\n            <p>Channel Description</p>\n            <div className=\"string-input-array\">\n              <StringArrayInput onChange={set ('description')} defaultValue={channelInfo.description} />\n            </div>\n          </section>\n          <section className=\"about-input\">\n            <p>Image</p>\n            {\n              !image &&\n              <p onClick={clickImage}>-- Upload Photo --</p>\n            }\n            {\n              !!image &&\n              <img onClick={clickImage} src={image} />\n            }\n            <input ref={imageRef} onChange={actuallyUploadImage} type=\"file\" hidden accept=\".jpg, .jpeg, .png\" />\n          </section>\n          <section className=\"about-input\">\n            <button onClick={submit}>Submit Changes</button>\n          </section>\n        </div>\n      </main>\n    </>\n  )\n\n  return (\n    <main className=\"about-container\">\n      <div className=\"about\">\n        <section className=\"about-section\">\n          <H1>{channelInfo.title}</H1>\n          <div className=\"text-center\">\n            {\n              !!user &&\n              <a onClick={() => {edit (true)}}>Edit</a>\n            }\n          </div>\n          <div className=\"circle-image-container\">\n            <img src={`https://clergymen-file-bucket-3-8-2021.s3.amazonaws.com/${channelInfo.image.url}`} />\n          </div>\n        </section>\n        <section className=\"about-section\">\n          {\n            Array.isArray (channelInfo.description) &&\n            channelInfo.description.map (text => <p className=\"about-text\">{text}</p>)\n          }\n        </section>\n      </div>\n    </main>\n  )\n}","import './App.css';\nimport Nav from './components/Nav';\nimport Auth from './pages/Auth';\nimport Characters from './pages/Characters';\nimport Episodes from './pages/Episodes';\nimport CreateCharacter from './pages/CreateCharacter';\nimport CreateEpisode from './pages/CreateEpisode';\nimport EditCharacter from './pages/EditCharacter';\nimport About from './pages/About';\n\nfunction App() {\n  return (\n    <>\n      <Nav/>\n      <Auth />\n      <About />\n      <Characters />\n      <CreateCharacter />\n      <EditCharacter />\n      <Episodes />\n      <CreateEpisode />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AppProvider from './AppProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
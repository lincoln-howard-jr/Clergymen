{"version":3,"sources":["components/AudioPlayer.js","components/Headers.js","lib/poolDetails.js","lib/auth.js","hooks/index.js","hooks/newUseAuth.js","hooks/useCharacters.js","hooks/useForm.js","hooks/useRouter.js","hooks/useEpisodes.js","hooks/useChannelInfo.js","hooks/useContact.js","AppProvider.js","hooks/useUploads.js","img/nav.svg","components/Nav.js","pages/Auth.js","img/rotate.svg","pages/Characters.js","img/play.svg","pages/Episodes.js","pages/CreateCharacter.js","pages/CreateEpisode.js","pages/EditCharacter.js","pages/EditEpisode.js","components/StringArrayInput.js","pages/About.js","pages/SingleEpisode.js","pages/Contact.js","App.js","index.js"],"names":["ts","seconds","Math","floor","slice","src","playing","title","togglePlay","photo","useState","width","setWidth","currTime","setCurrTime","duration","setDuration","audioRef","useRef","useEffect","current","play","pause","id","onClick","className","style","onTimeUpdate","e","currentTime","ref","autoPlay","H1","children","short","H2","H3","UserPoolId","ClientId","IdentityPoolId","AmazonCognitoIdentity","poolDetails","accessToken","headers","get","Headers","useAuth","onSessionActive","pool","getCurrentUser","user","setUser","setAccessToken","refreshToken","setRefreshToken","post","isAuthenticated","setIsAuthenticated","isFirstLogin","setIsFirstLogin","userAttributes","setUserAttributes","retrieveAccessTokens","a","getSession","error","session","Promise","reject","getAccessToken","getJwtToken","RefreshToken","getRefreshToken","getToken","resolve","refreshSession","err","login","Username","Password","details","_user","Pool","authenticateUser","onSuccess","onFailure","newPasswordRequired","attrs","email_verified","phone_number_verified","signOut","init","completePasswordChallenge","password","console","log","completeNewPasswordChallenge","useCharacters","characters","setCharacters","setErr","getCharacters","fetch","req","json","createCharacter","character","method","body","JSON","stringify","res","updateCharacter","deleteCharacter","useForm","onSubmit","v","defaultValues","validation","values","setValues","validationErrors","set","name","target","value","Object","assign","setAll","obj","status","validate","throwErr","errors","Error","submit","result","useRouter","window","location","href","split","origin","page","setPage","redirect","path","data","history","pushState","useEpisodes","episodes","setEpisodes","getEpisodes","createEpisode","deleteEpisode","useChannelInfo","channelInfo","setChannelInfo","getChannel","updateChannelInfo","channel","useContact","messages","setMessages","getMessages","sendMessage","AppContext","createContext","useApp","React","useContext","AppProvider","podcastSrc","setPodcastSrc","podcastTitle","setPodcastTitle","podcastCoverPhoto","setPodcastCoverPhoto","podcastPlaying","setPodcastPlaying","frozen","setFrozen","uploads","createUpload","upload","useUploads","router","contact","auth","Provider","setPodcast","episode","audioSource","url","coverPhoto","freeze","message","display","alignItems","justifyContent","backgroundColor","height","zIndex","position","left","top","padding","border","AudioPlayer","Nav","open","setOpen","overlayRef","rac","NavSVG","Auth","username","setUsername","setPassword","runLogin","type","placeholder","onChange","toString","Characters","flipped","setFlipped","map","includes","actorName","characterName","fl","filter","_id","RotateSVG","margin","actorLongDescription","characterLongDescription","characterPicture","actorPicture","Episodes","PlaySVG","seasonNumber","episodeNumber","longDescription","CreateCharacter","characterPic","setCharacterPic","actorPic","setActorPic","characterPictureRef","actorPictureRef","clickCharacterPicture","click","clickActorPicture","actuallyUploadCharacterPicture","unfreeze","filename","files","contentType","uploadUrl","alert","actuallyUploadActorPicture","updateHeight","scrollHeight","startsWith","onFocus","onInput","accept","hidden","CreateEpisode","releaseDate","y","m","d","parseInt","Date","coverPhotoUrl","setCoverPhotoUrl","audioSourceUrl","setAudioSourceUrl","uploadCoverPhoto","uploadCoverPhotoRef","uploadAudioSource","uploadAudioSourceRef","EditCharacter","setCharacter","cid","URLSearchParams","find","c","getCharacter","val","char","defaultValue","characterShortDescription","actorShortDescription","fmtDate","getFullYear","getMonth","getDate","EditEpisode","updateEpisode","singleEpisode","setSingleEpisode","eid","search","found","length","StringArrayInput","array","setArray","index","arr","innerText","removeSection","splice","text","contentEditable","onBlur","About","editor","edit","imageRef","image","setImage","clickImage","actuallyUploadImage","r","preventDefault","author","copyright","category","subcategory","description","Array","isArray","SingleEpisode","Contact","messageErr","setMessageErr","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f830d97.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\"\n\nconst ts = seconds => `${Math.floor (seconds / 60)}:${('00' + Math.floor (seconds % 60)).slice (-2)}`;\n\nexport default function ({src, playing, title, togglePlay, photo}) {\n  const [width, setWidth] = useState ('0%');\n  const [currTime, setCurrTime] = useState (0);\n  const [duration, setDuration] = useState (0);\n  const audioRef = useRef ();\n  const onProgress = e => {\n    setWidth (`${80 * (audioRef.current.currentTime / audioRef.current.duration)}%`);\n    setCurrTime (audioRef.current.currentTime);\n    setDuration (audioRef.current.duration);\n  }\n  useEffect (() => {\n    if (playing) audioRef.current.play ();\n    else audioRef.current.pause ();\n  }, [playing]);\n  return (\n    <footer id=\"audio-player\" onClick={togglePlay}>\n      <section className=\"audio-player-container\">\n        <section className=\"audio-player-time\">\n          {\n            ts (currTime)\n          } / {\n            ts (duration)\n          }\n        </section>\n        <section className=\"audio-player-title\">{title}</section>\n        <section onClick={togglePlay} className=\"audio-player-image\">\n          <img src={photo} />\n        </section>\n        <section style={{width}} className=\"progress\" />\n      </section>\n      <audio onTimeUpdate={onProgress} ref={audioRef} src={src} autoPlay />\n    </footer>\n  )\n}","export function H1 ({children, short}) {\n  return (\n    <>\n      <h1>\n        {children}\n      </h1>\n      <h1 className=\"short\">\n        {short ? short : children}\n      </h1>\n    </>\n  )\n}\n\nexport function H2 ({children, short}) {\n  return (\n    <>\n      <h2>\n        {children}\n      </h2>\n      <h2 className=\"short\">\n        {short ? short : children}\n      </h2>\n    </>\n  )\n}\n\nexport function H3 ({children, short}) {\n  return (\n    <>\n      <h3>\n        {children}\n      </h3>\n      <h3 className=\"short\">\n        {short ? short : children}\n      </h3>\n    </>\n  )\n}\n\nexport function H4 ({children, short}) {\n  return (\n    <>\n      <h4>\n        {children}\n      </h4>\n      <h4 className=\"short\">\n        {short ? short : children}\n      </h4>\n    </>\n  )\n}\n\nexport function H5 ({children, short}) {\n  return (\n    <>\n      <h5>\n        {children}\n      </h5>\n      <h5 className=\"short\">\n        {short ? short : children}\n      </h5>\n    </>\n  )\n}\n\nexport function H6 ({children, short}) {\n  return (\n    <>\n      <h6>\n        {children}\n      </h6>\n      <h6 className=\"short\">\n        {short ? short : children}\n      </h6>\n    </>\n  )\n}","export default {\n  UserPoolId: 'us-east-1_UW4qNlUmI',\n  ClientId: '5kurv3o1l70p414j83ka7i16sc',\n  IdentityPoolId: 'us-east-1:2cc114d3-6d89-4f65-b6e5-0b2902209f61'\n}","import * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\nimport poolDetails from './poolDetails';\n\nlet authDetails = null;\nlet Pool = new AmazonCognitoIdentity.CognitoUserPool (poolDetails);\nlet cognitoUser = null;\nlet accessToken = null;\nlet refreshToken = null;\n\nexport const headers = {\n  get get () {\n    return new Headers ({\n      'x-amz-access-token': accessToken\n    });\n  },\n  get post () {\n    return new Headers ({\n      'x-amz-access-token': accessToken,\n      'Content-Type': 'application/json'\n    });\n  }\n}\nexport const login = (Username, Password) => new Promise ((resolve, reject) => {\n  try {\n    authDetails = new AmazonCognitoIdentity.AuthenticationDetails ({Username, Password});\n    cognitoUser = new AmazonCognitoIdentity.CognitoUser ({Username, Pool});\n    cognitoUser.authenticateUser (authDetails, {\n      onSuccess: () => resolve (),\n      onFailure: () => reject ()\n    })\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const getCurrentUser = () => new Promise ((resolve, reject) => {\n  try {\n    cognitoUser = Pool.getCurrentUser ();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const retrieveAccessToken = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cognito user must be defined to get access token';\n    cognitoUser.getSession ((e, session) => {\n      if (e) return reject (e);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const refreshSession = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cannot refresh empty cognito user';\n    if (!refreshToken) throw 'Cannot refresh empty refresh token';\n    cognitoUser.refreshSession (refreshToken, (err, session) => {\n      if (err) return reject (err);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const signOut = async () => new Promise (async (resolve, reject) => {\n  try {\n    await cognitoUser.signOut();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\n// export const register = async (Username, Password) => new Promise (async (resolve, reject) => {\n//   const customAttributeId = new AmazonCognitoIdentity.CognitoUserAttribute ({Name: 'custom:id', Value: id ()})\n//   const attributeList = [attributePhoneNumber, customAttributeId];\n//   Pool.signUp (Username, Password, attributeList, null, (err, result) => {\n//     if (err) return reject (err);\n//     cognitoUser = result.user;\n//     resolve ();\n//   })\n// });\n","// imports\nimport _useAuth from './newUseAuth';\nimport _useCharacters from './useCharacters';\nimport _useForm from './useForm';\nimport _router from './useRouter';\nimport _episodes from './useEpisodes';\nimport _channel from './useChannelInfo';\nimport _contact from './useContact';\n// exports\nexport const useAuth = _useAuth;\nexport const useCharacters = _useCharacters;\nexport const useForm = _useForm;\nexport const useRouter = _router;\nexport const useEpisodes = _episodes;\nexport const useChannelInfo = _channel;\nexport const useContact = _contact;","import { useState, useEffect } from \"react\";\nimport poolDetails from \"../lib/poolDetails\";\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\n\nexport default function useAuth (onSessionActive) {\n  // config\n  let pool = new AmazonCognitoIdentity.CognitoUserPool (poolDetails);\n  const [user, setUser] = useState (pool.getCurrentUser ());\n  // private state\n  const [accessToken, setAccessToken] = useState ('');\n  const [refreshToken, setRefreshToken] = useState (null);\n  const headers = {\n    get: {\n      'x-amz-access-token': accessToken\n    },\n    post: {\n      'Content-Type': 'application/json',\n      'x-amz-access-token': accessToken\n    }\n  };\n  \n  // public state mgmt\n  const [isAuthenticated, setIsAuthenticated] = useState (false);\n  const [isFirstLogin, setIsFirstLogin] = useState (false);\n  const [userAttributes, setUserAttributes] = useState (null);\n\n  // private method gets access and refresh tokens - call after authenticating\n  const retrieveAccessTokens = async () => {\n    if (user) user.getSession ((error, session) => {\n      if (error) return Promise.reject (error);\n      setAccessToken (session.getAccessToken ().getJwtToken ());\n      setRefreshToken (new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()}));\n      setIsAuthenticated (true);\n      return Promise.resolve ();\n    });\n    else return Promise.reject ('user dne');\n  };\n\n  // private method - refresh session should be called on init\n  const refreshSession = async () => {\n    if (user && refreshToken) user.refreshSession (refreshToken, err => {\n      if (err) return Promise.reject (err);\n      return retrieveAccessTokens ();\n    })\n  };\n\n  // public method - log user in with username/password\n  const login = async (Username, Password) => new Promise (async (resolve, reject) => {\n    let details = new AmazonCognitoIdentity.AuthenticationDetails ({Username, Password});\n    if (!user) {\n      let _user = new AmazonCognitoIdentity.CognitoUser ({Username, Pool: pool});\n      setUser (_user);\n      _user.authenticateUser (details, {\n        onSuccess: async () => {\n          resolve (await retrieveAccessTokens ())\n        },\n        onFailure: error => {\n          reject (error);\n        },\n        newPasswordRequired: attrs => {\n          delete attrs.email_verified;\n          delete attrs.phone_number_verified;\n          setUserAttributes (attrs);\n          setIsFirstLogin (true);\n        }\n      });\n    }\n  });\n\n  const completePasswordChallenge = password => {\n    console.log (password, user)\n    user.completeNewPasswordChallenge (password, userAttributes, {\n      onSuccess: () => {\n        init ();\n      }\n    })\n  };\n  \n  // public sign out of account\n  const signOut = async () => new Promise (async (resolve, reject) => {\n    try {\n      await user.signOut();\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  // private method\n  async function init () {\n    await retrieveAccessTokens ();\n    await refreshSession ();\n  };\n\n  useEffect (() => {\n    init ();\n  }, []);\n\n  useEffect (() => {\n    if (isAuthenticated) onSessionActive ();\n  }, [isAuthenticated]);\n\n  return {headers, user, isAuthenticated, isFirstLogin, login, completePasswordChallenge, signOut};\n}","import { useEffect, useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useCharacters () {\n\n  // state management\n  const [characters, setCharacters] = useState ([]);\n  const [err, setErr] = useState (null);\n\n  // get all characters\n  const getCharacters = async () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters');\n      let characters = await req.json ();\n      setCharacters (characters);\n      resolve (characters);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    } \n  })\n\n  // mutators\n  const createCharacter = async character => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters', {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (character)\n      })\n      let res = await req.json ();\n      resolve (res);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  const updateCharacter = async (id, character) => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters/${id}`, {\n        method: 'PUT',\n        headers: headers.post,\n        body: JSON.stringify (character)\n      })\n      let res = await req.json ();\n      resolve (res);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  const deleteCharacter = async id => new Promise (async (resolve, reject) => {\n    try {\n      await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters/${id}`, {\n        method: 'delete',\n        headers: headers.get\n      })\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  })\n\n  useEffect (() => {\n    getCharacters ();\n  }, []);\n\n  return {characters, err, getCharacters, createCharacter, updateCharacter, deleteCharacter};\n\n}","import { useState } from \"react\";\n\n//  onSubmit : async Function\n//    action performed on when form.submit is called\n//  defaultValues : Object\n//    the default values for the form\n//  validation : Object\n//    an object that maps field names to validation functions\nexport default function useForm (onSubmit=v=>console.log (v), defaultValues={}, validation={}) {\n\n  const [values, setValues] = useState (defaultValues);\n  const [validationErrors, setErr] = useState ({});\n\n  const set = name => (e) => {\n    if (e.target && e.target.value) return setValues (values => Object.assign (values, {[name]: e.target.value}));\n    setValues (values => Object.assign (values, {[name]: e}));\n  }\n\n  const setAll = obj => {\n    setValues (obj);\n  }\n\n  const get = name => {\n    return values [name];\n  }\n\n  const status = name => {\n    return validationErrors [name] ? 'invalid' : 'valid';\n  }\n\n  const validate = () => {\n    let throwErr = false;\n    for (const name in validation) {\n      validation [name] (values [name]) ?\n        setErr (errors => Object.assign (errors, {[name]: false}))\n        :\n        throwErr = true; setErr (errors => Object.assign (errors, {[name]: true}))\n      ;\n    }\n    if (throwErr) {\n      console.log (validationErrors);\n      throw new Error ('validation error');\n    }\n  }\n\n  const submit = async () => new Promise (async (resolve,reject) => {\n    try {\n      validate ();\n      let result = await onSubmit (values);\n      resolve (result);\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  return {set, setAll, get, status, submit};\n\n}","import { useState } from \"react\"\n\nexport default function useRouter () {\n  \n  const [page, setPage] = useState (window.location.href.split (window.location.origin) [1]);\n  \n  const redirect = (path, data={}) => () => {\n    setPage (path);\n    window.history.pushState (data, path, path);\n  }\n\n  return {page, redirect}\n}","import { useEffect, useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useEpisodes () {\n\n  // state management\n  const [episodes, setEpisodes] = useState ([]);\n\n  const getEpisodes = () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes`);\n      let data = await req.json ();\n      setEpisodes (data);\n      resolve (data);\n    } catch (e) {\n      reject (e);\n    }\n  })\n  \n  const createEpisode = body => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes`, {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let data = await req.json ();\n      resolve (data);\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  const deleteEpisode = id => new Promise (async (resolve, reject) => {\n    try {\n      await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes/${id}`, {\n        method: 'delete',\n        headers: headers.get\n      });\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  useEffect (() => {\n    getEpisodes ();\n  }, []);\n\n  return {episodes, getEpisodes, createEpisode, deleteEpisode};\n\n}","import { useEffect, useState } from \"react\"\nimport { headers } from \"../lib/auth\";\n\nexport default function useUploads () {\n\n  const [channelInfo, setChannelInfo] = useState (null);\n  const [err, setErr] = useState (null);\n\n  const getChannel = async () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/channel');\n      let data = await req.json ();\n      setChannelInfo (data);\n      resolve (data);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  const updateChannelInfo = body => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/channel', {\n        method: 'PUT',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let channel = await req.json ();\n      setChannelInfo (Object.assign (channelInfo, channel));\n      resolve ();\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  useEffect (() => {\n    getChannel ();\n  }, []);\n\n  return {channelInfo, err, updateChannelInfo}\n}","import { useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useContact () {\n\n  const [messages, setMessages] = useState ([]);\n\n  const getMessages = async () => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/messages', {\n        headers: headers.get\n      });\n      let messages = await req.json ();\n      setMessages (messages);\n    } catch (e) {\n    } \n  }\n\n  const sendMessage = async body => new Promise (async (resolve, reject) => {\n    try {\n      await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/messages', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify (body)\n      })\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  return {messages, getMessages, sendMessage}\n\n}","// create a context usable across the whole application\nimport React, { createContext, useState } from \"react\";\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport {H1} from './components/Headers';\nimport {useAuth, useCharacters, useForm, useRouter, useEpisodes, useChannelInfo, useContact} from './hooks';\nimport useUploads from \"./hooks/useUploads\";\n// react context api\nconst AppContext = createContext ();\nexport const useApp = () => React.useContext (AppContext);\n\n// the component\nexport default function AppProvider ({children}) {\n\n  // podcast player\n  const [podcastSrc, setPodcastSrc] = useState (null);\n  const [podcastTitle, setPodcastTitle] = useState (null);\n  const [podcastCoverPhoto, setPodcastCoverPhoto] = useState (null);\n  const [podcastUpNext, setPodcastUpNext] = useState ([]);\n  const [podcastPlaying, setPodcastPlaying] = useState (true);\n\n  const togglePlay = () => setPodcastPlaying (!podcastPlaying);\n  const setPodcast = episode => e => {\n    setPodcastSrc (`https://d1q33inlkclwle.cloudfront.net/${episode.audioSource.url}`)\n    setPodcastCoverPhoto (`https://d1q33inlkclwle.cloudfront.net/${episode.coverPhoto.url}`);\n    setPodcastTitle (episode.title);\n  }\n\n  // freeze/unfreeze animation\n  const [frozen, setFrozen] = useState (false);\n  const freeze = message => {\n    setFrozen (message);\n    return function unfreeze () {\n      setFrozen (false);\n    }\n  }\n\n  // hooks\n  const characters = useCharacters ();\n  const episodes = useEpisodes ();\n  const uploads = useUploads ();\n  const router = useRouter ();\n  const channel = useChannelInfo ();\n  const contact = useContact ();\n  // called when the user is authenticated\n  function onSessionActive () {\n    contact.getMessages ();\n  };\n  // auth hook\n  const auth = useAuth (onSessionActive);\n\n  // just wrap the whole app component in this\n  return (\n    <AppContext.Provider value={{router, auth, characters, uploads, episodes, channel, contact, togglePlay, setPodcast, freeze, useForm}} >\n      <div style={{\n        display: (!frozen ? 'none' : 'grid'),\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ccccccaa',\n        width: '100vw',\n        height: '100vh',\n        zIndex: 10,\n        position: 'fixed',\n        left: 0,\n        top: 0\n      }}>\n        <span style={{backgroundColor: 'white', padding: 50, border: '1px solid black'}}>\n          {frozen === true ? '' : <H1>{frozen}</H1>}\n        </span>\n      </div>\n      {children}\n      {\n        !!podcastSrc &&\n        <AudioPlayer src={podcastSrc} title={podcastTitle} photo={podcastCoverPhoto} togglePlay={togglePlay} playing={podcastPlaying} />\n      }\n    </AppContext.Provider>\n  )\n}","import { useState } from \"react\"\nimport { headers } from \"../lib/auth\";\n\nexport default function useUploads () {\n\n  const [err, setErr] = useState (null);\n\n  const createUpload = body => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/uploads', {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let upload = await req.json ();\n      resolve (upload);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  return {err, createUpload}\n}","export default __webpack_public_path__ + \"static/media/nav.de37125c.svg\";","import { useState, useRef } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport NavSVG from '../img/nav.svg';\n\nexport default function Nav () {\n  const {router: {redirect, page}} = useApp ();\n  const [open, setOpen] = useState (false);\n  const overlayRef = useRef ();\n  const close = e => {\n    if (e.target === overlayRef.current) {\n      setOpen (false);\n    }\n  }\n  const rac = path => e => {\n    redirect (path) ();\n    setOpen (false);\n  }\n  return (\n    <>\n      <nav onClick={() => setOpen (true)} id=\"nav\" className={open ? 'open' : ''}>\n        <img src={NavSVG} />\n      </nav>\n      <div id=\"nav-overlay\" ref={overlayRef} onClick={close}>\n        <ul>\n          <li onClick={rac ('/Clergymen/?page=about')}>About</li>\n          <li onClick={rac ('/Clergymen/?page=episodes')}>Episodes</li>\n          <li onClick={rac ('/Clergymen/?page=characters')}>Characters</li>\n          <li onClick={rac ('/Clergymen/?page=contact')}>Contact</li>\n        </ul>\n      </div>\n    </>\n  )\n}","import { useState } from 'react';\nimport {useApp} from '../AppProvider';\nimport { H2 } from '../components/Headers';\n\nfunction Auth () {\n  \n  const {router: {page}, auth: {isAuthenticated, isFirstLogin, login, completePasswordChallenge, signOut}} = useApp ();\n\n  const [username, setUsername] = useState ('');\n  const [password, setPassword] = useState ('');\n  const [err, setErr] = useState (null);\n  const runLogin = async e => {\n    try {\n      await login (username, password);\n      setUsername ('');\n      setPassword ('');\n    } catch (e) {\n      setErr (e?.message);\n    }\n  }\n  \n  if (page !== '/Clergymen/?page=admin') return '';\n  if (isFirstLogin) return (\n    <div>\n      <H2>Create New Password</H2>\n      <div className=\"input-group\">\n        <label>Password</label>\n        <input type=\"password\" value={password} placeholder=\"password\" onChange={e => setPassword (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <button onClick={() => completePasswordChallenge (password)}>Set New Password</button>\n      </div>\n    </div>\n  )\n  if (!isAuthenticated) return (\n    <main className=\"\">\n      <H2>Log In</H2>\n      {\n        err &&\n        <div className=\"input-group\">\n          <label>Error: {err.toString ()}</label>\n        </div>\n      }\n      <div className=\"input-group\">\n        <label>Username</label>\n        <input value={username} placeholder=\"Username\" onChange={e => setUsername (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <label>Password</label>\n        <input type=\"password\" value={password} placeholder=\"password\" onChange={e => setPassword (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <button onClick={runLogin}>Log In</button>\n      </div>\n    </main>\n  )\n  return (\n    <main className=\"\">\n      <div>\n        Click to <a onClick={signOut}>logout.</a>\n      </div>\n    </main>\n  )\n}\n\nexport default Auth","export default __webpack_public_path__ + \"static/media/rotate.6f436ac3.svg\";","import { useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H3} from '../components/Headers'\nimport RotateSVG from '../img/rotate.svg'\n\nexport default function Characters () {\n  \n  const {auth: {user}, router: {page, redirect}, characters: {characters}} = useApp ();\n\n  const [flipped, setFlipped] = useState ([]);\n\n  const flip = id => e => {\n    if (flipped.includes (id)) return setFlipped (fl => fl.filter (_id => _id !== id));\n    setFlipped (fl => [...fl, id]);\n  }\n\n  if (page !== '/Clergymen/?page=characters') return '';\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Characters:</H1>\n        {\n          user &&\n          <a onClick={redirect ('/Clergymen/?page=create-character')}>Add Character</a>\n        }\n      </div>\n      <main>\n        {\n          characters.map (character => (\n            <div className={flipped.includes (character.id) ? 'character-card actor' : \"character-card\"}>\n              <div className=\"character-played-by\">\n                <header>\n                  <H3 short={flipped.includes (character.id) ? character.actorName : character.characterName}>\n                    {flipped.includes (character.id) ? character.actorName : character.characterName}\n                  </H3>\n                  <img className=\"invert\" onClick={flip (character.id)} src={RotateSVG} />\n                </header>\n                <hr style={{margin: '25px 25%'}} />\n                {\n                  user &&\n                  <div className=\"text-center\">\n                    <a onClick={redirect (`/Clergymen/?page=edit-character&id=${character.id}`)}>Edit</a>\n                  </div>\n                }\n              </div>\n              <div className=\"character-info\">\n                <span>{flipped.includes (character.id) ? character.actorLongDescription : character.characterLongDescription}</span>\n              </div>\n              {\n                (!flipped.includes (character.id) && character.characterPicture && character.characterPicture.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://d1q33inlkclwle.cloudfront.net/${character.characterPicture.url}`} />\n                  </div>\n                )\n              }\n              {\n                (flipped.includes (character.id) && character.characterPicture && character.characterPicture.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://d1q33inlkclwle.cloudfront.net/${character.actorPicture.url}`} />\n                  </div>\n                )\n              }\n            </div>\n          ))\n        }\n      </main>\n    </>\n  )\n\n}","export default __webpack_public_path__ + \"static/media/play.c0a9fbaf.svg\";","import { useApp } from \"../AppProvider\";\nimport {H1, H3} from '../components/Headers'\nimport PlaySVG from '../img/play.svg'\n\nexport default function Episodes () {\n  \n  const {auth: {user}, router: {page, redirect}, episodes: {episodes}, setPodcast} = useApp ();\n\n  if (page !== '/Clergymen/?page=episodes') return '';\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Episodes:</H1>\n        {\n          user &&\n          <a onClick={redirect ('/Clergymen/?page=create-episode')}>Add Episode</a>\n        }\n      </div>\n      <main>\n        {\n          episodes.map (episode => (\n            <div className=\"character-card\">\n              <div className=\"character-played-by\">\n                <header>\n                  <H3>{episode.title}</H3>\n                  <img className=\"invert\" onClick={setPodcast (episode)} src={PlaySVG} />\n                </header>\n                <hr style={{margin: '25px 25%'}} />\n                {\n                  user &&\n                  <div className=\"text-center\">\n                    <a onClick={redirect (`/Clergymen/?page=edit-episode&id=${episode.id}`)}>Edit</a>\n                  </div>\n                }\n              </div>\n              <div className=\"character-info\">\n                <H3 short={`S${episode.seasonNumber}, E${episode.episodeNumber}`}>Season {episode.seasonNumber}, Episode {episode.episodeNumber}</H3>\n                <span>{episode.longDescription}</span>\n              </div>\n              {\n                (episode.coverPhoto && episode.coverPhoto.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://d1q33inlkclwle.cloudfront.net/${episode.coverPhoto.url}`} />\n                  </div>\n                )\n              }\n            </div>\n          ))\n        }\n      </main>\n    </>\n  )\n\n}","import { useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function CreateCharacter () {\n  \n  const {auth: {user}, router: {page, redirect}, characters: {createCharacter}, uploads: {createUpload}, useForm, freeze} = useApp ();\n\n  const {set, get, status, submit} = useForm (createCharacter);\n  const [characterPic, setCharacterPic] = useState (false);\n  const [actorPic, setActorPic] = useState (false);\n  const characterPictureRef = useRef ();\n  const actorPictureRef = useRef ();\n\n  const clickCharacterPicture = async () => {\n    characterPictureRef.current.click ();\n  }\n\n  const clickActorPicture = async () => {\n    actorPictureRef.current.click ();\n  }\n\n  const actuallyUploadCharacterPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: characterPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': characterPictureRef.current.files [0].type}),\n        body: characterPictureRef.current.files [0]\n      })\n      console.log (upload);\n      set ('characterPicture') (upload.id);\n      setCharacterPic (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n    \n  const actuallyUploadActorPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: actorPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      console.log (upload);\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': actorPictureRef.current.files [0].type}),\n        body: actorPictureRef.current.files [0]\n      })\n      set ('actorPicture') (upload.id);\n      setActorPic (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n  if (!user) return '';\n  if (!page.startsWith ('/Clergymen/?page=create-character')) return '';\n\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Character\">Create Character</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Character</H2>\n        </header>\n        <section>\n          <H3>Character Info</H3>\n          <div className=\"input-group\">\n            <label>Character Name</label>\n            <input name=\"characterName\" value={get ('characterName')} onChange={set ('characterName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Short Description</label>\n            <input name=\"characterShortDescription\" value={get ('characterShortDescription')} onChange={set ('characterShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"characterLongDescription\" value={get ('characterLongDescription')} onChange={set ('characterLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Picture</label>\n            {\n              !characterPic &&\n              <p onClick={clickCharacterPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!characterPic &&\n              <img src={characterPic} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={characterPictureRef} onChange={actuallyUploadCharacterPicture} />\n          </div>\n        </section>\n        <section>\n          <H3>Actor Info</H3>\n          <div className=\"input-group\">\n            <label>Actor Name</label>\n            <input name=\"actorName\" value={get ('actorName')} onChange={set('actorName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Short Description</label>\n            <input name=\"actorShortDescription\" value={get ('actorShortDescription')} onChange={set ('actorShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"actorLongDescription\" value={get ('actorLongDescription')} onChange={set ('actorLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Picture</label>\n            {\n              !actorPic &&\n              <p onClick={clickActorPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!actorPic &&\n              <img src={actorPic} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={actorPictureRef} onChange={actuallyUploadActorPicture} />\n          </div>\n        </section>\n        <button onClick={submit}>Add Character</button>\n      </div>\n    </main>\n  )\n\n}","import { useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function CreateEpisode () {\n\n  const {router: {page}, auth: {user}, episodes: {createEpisode}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  const {get, set, submit} = useForm (values => {\n    let [y, m, d] = values.releaseDate.split ('-');\n    let body = Object.assign (values, {\n      episodeNumber: parseInt (values.episodeNumber),\n      seasonNumber: parseInt (values.seasonNumber),\n      releaseDate: new Date (y, m, d)\n    })\n    createEpisode (body);\n  });\n  const [coverPhotoUrl, setCoverPhotoUrl] = useState (null);\n  const [audioSourceUrl, setAudioSourceUrl] = useState (null);\n\n  const clickCoverPhoto = () => uploadCoverPhotoRef.current.click ();\n  const uploadCoverPhoto = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: uploadCoverPhotoRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadCoverPhotoRef.current.files [0].type}),\n        body: uploadCoverPhotoRef.current.files [0]\n      })\n      set ('coverPhoto') (upload.id);\n      setCoverPhotoUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const clickAudioSource = () => uploadAudioSourceRef.current.click ();\n  const uploadAudioSource = async e => {\n    let unfreeze = freeze ('Uploading Podcast Audio - This May Take A Second!');\n    try {\n      let upload = await createUpload ({\n        filename: uploadAudioSourceRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadAudioSourceRef.current.files [0].type}),\n        body: uploadAudioSourceRef.current.files [0]\n      })\n      set ('audioSource') (upload.id);\n      setAudioSourceUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const uploadCoverPhotoRef = useRef ();\n  const uploadAudioSourceRef = useRef ();\n\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n  if (!user) return '';\n  if (page !== '/Clergymen/?page=create-episode') return '';\n  \n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Episode\">Create Episode</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Episode</H2>\n        </header>\n        <section>\n          <H3>Episode Info</H3>\n          <div className=\"input-group\">\n            <label>Episode Title</label>\n            <input name=\"title\" value={get ('title')} onChange={set ('title')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Season Number</label>\n            <input name=\"seasonNumber\" type='number' value={get ('seasonNumber')} onChange={set ('seasonNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Episode Number</label>\n            <input name=\"episodeNumber\" type='number' value={get ('episodeNumber')} onChange={set ('episodeNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Short Description</label>\n            <input name=\"shortDescription\" value={get ('shortDescription')} onChange={set ('shortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"longDescription\" value={get ('longDescription')} onChange={set ('longDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Release Date (doesn't have to be final!)</label>\n            <input name=\"releaseDate\" type=\"date\" value={get ('releaseDate')} onChange={set ('releaseDate')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Cover Photo</label>\n            {\n              !get ('coverPhoto') &&\n              <p onClick={clickCoverPhoto}>-- Upload Photo --</p>\n            }\n            {\n              !!get('coverPhoto') &&\n              <img src={coverPhotoUrl} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={uploadCoverPhotoRef} onChange={uploadCoverPhoto} />\n          </div>\n          <div className=\"input-group\">\n            <label>Audio File (mp3)</label>\n            {\n              !get ('audioSource') &&\n              <p onClick={clickAudioSource}>-- Upload Audio --</p>\n            }\n            {\n              !!get('audioSource') &&\n              <audio src={audioSourceUrl} />\n            }\n            <input type=\"file\" accept=\"audio/mp3\" hidden ref={uploadAudioSourceRef} onChange={uploadAudioSource} />\n          </div>\n        </section>\n        <button onClick={submit}>Add Episode</button>\n      </div>\n    </main>\n  )\n\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function EditCharacter () {\n  \n  const {auth: {isAuthenticated}, router: {page}, characters: {characters, updateCharacter, deleteCharacter}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  \n  const [character, setCharacter] = useState (null);\n  const getCharacter = () => {\n    let params = new URLSearchParams (page.split ('?') [1]);\n    let cid = params.get ('id');\n    setCharacter (characters.find (c => c.id === cid));\n  }\n  useEffect (() => {\n    getCharacter ();\n  }, [characters, page])\n  const {set, submit} = useForm (val => updateCharacter (character.id, val));\n  const characterPictureRef = useRef ();\n  const actorPictureRef = useRef ();\n\n  const clickCharacterPicture = async () => {\n    characterPictureRef.current.click ();\n  }\n\n  const clickActorPicture = async () => {\n    actorPictureRef.current.click ();\n  }\n\n  const actuallyUploadCharacterPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: characterPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': characterPictureRef.current.files [0].type}),\n        body: characterPictureRef.current.files [0]\n      })\n      console.log (upload);\n      set ('characterPicture') (upload.id);\n      setCharacter (char => Object.assign (char, {characterPicture: {url: `https://d1q33inlkclwle.cloudfront.net/${upload.url}`}}))\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n    \n  const actuallyUploadActorPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: actorPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      console.log (upload);\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': actorPictureRef.current.files [0].type}),\n        body: actorPictureRef.current.files [0]\n      })\n      set ('actorPicture') (upload.id);\n      setCharacter (char => Object.assign (char, {actorPicture: {url: `https://d1q33inlkclwle.cloudfront.net/${upload.url}`}}))\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  if (!isAuthenticated) return null;\n  if (!character) return null;\n  if (!page.startsWith ('/Clergymen/?page=edit-character')) return null;\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short='Edit'>Edit {character.characterName}</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>{character.characterName}/{character.actorName}</H2>\n        </header>\n        <section>\n          <H3>Character Info</H3>\n          <div className=\"input-group\">\n            <label>Character Name</label>\n            <input name=\"characterName\" defaultValue={character.characterName} onChange={set ('characterName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Short Description</label>\n            <input name=\"characterShortDescription\" defaultValue={character.characterShortDescription} onChange={set ('characterShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Long Description</label>\n            <textarea name=\"characterLongDescription\" defaultValue={character.characterLongDescription} onChange={set ('characterLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Picture</label>\n            {\n              !character.characterPicture &&\n              <p onClick={clickCharacterPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!character.characterPicture &&\n              <div className=\"circle-image-container\">\n                <img onClick={clickCharacterPicture} src={`https://d1q33inlkclwle.cloudfront.net/${character.characterPicture.url}`} />\n              </div>\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={characterPictureRef} onChange={actuallyUploadCharacterPicture} />\n          </div>\n        </section>\n        <section>\n          <H3>Actor Info</H3>\n          <div className=\"input-group\">\n            <label>Actor Name</label>\n            <input name=\"actorName\" defaultValue={character.actorName} onChange={set('actorName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Short Description</label>\n            <input name=\"actorShortDescription\" defaultValue={character.actorShortDescription} onChange={set ('actorShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Long Description</label>\n            <textarea name=\"actorLongDescription\" defaultValue={character.actorLongDescription} onChange={set ('actorLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Picture</label>\n            {\n              !character.actorPicture &&\n              <p onClick={clickActorPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!character.actorPicture &&\n              <div className=\"circle-image-container\">\n                <img onClick={clickActorPicture} src={`https://d1q33inlkclwle.cloudfront.net/${character.actorPicture.url}`} />\n              </div>\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={actorPictureRef} onChange={actuallyUploadActorPicture} />\n          </div>\n        </section>\n        <div className=\"button-group\">\n          <button onClick={submit}>Submit Changes</button>\n          <button onClick={() => deleteCharacter (character.id)}>Delete Character</button>\n        </div>\n      </div>\n    </main>\n  )\n\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nconst fmtDate = (d=new Date ()) => {\n  return `${d.getFullYear ()}-${('00' + d.getMonth ()).slice (-2)}-${('00' + d.getDate ()).slice (-2)}`\n}\n\nexport default function EditEpisode () {\n  \n  const {auth: {user}, router: {page}, uploads: {createUpload}, episodes: {episodes, updateEpisode, deleteEpisode}, useForm, freeze} = useApp ();\n  \n  const [singleEpisode, setSingleEpisode] = useState (null);\n\n  const {get, set, submit, setAll} = useForm (val => updateEpisode (singleEpisode.id, val));\n\n  useEffect (() => {\n    let eid = new URLSearchParams (window.location.search).get ('id');\n    let found = episodes.filter (episode => episode.id === eid);\n    setSingleEpisode (found.length ? found [0] : null);\n  }, [episodes, page]);\n\n  useEffect (() => {\n    if (singleEpisode) {\n      setAll (singleEpisode);\n      setCoverPhotoUrl (`https://d1q33inlkclwle.cloudfront.net/${singleEpisode.coverPhoto.url}`)\n      setAudioSourceUrl (`https://d1q33inlkclwle.cloudfront.net/${singleEpisode.audioSource.url}`)\n    }\n  }, [singleEpisode]);\n  \n  const [coverPhotoUrl, setCoverPhotoUrl] = useState (null);\n  const [audioSourceUrl, setAudioSourceUrl] = useState (null);\n\n  const clickCoverPhoto = () => uploadCoverPhotoRef.current.click ();\n  const uploadCoverPhoto = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: uploadCoverPhotoRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadCoverPhotoRef.current.files [0].type}),\n        body: uploadCoverPhotoRef.current.files [0]\n      })\n      set ('coverPhoto') (upload.id);\n      setCoverPhotoUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const clickAudioSource = () => uploadAudioSourceRef.current.click ();\n  const uploadAudioSource = async e => {\n    let unfreeze = freeze ('Uploading Podcast Audio - This May Take A Second!');\n    try {\n      let upload = await createUpload ({\n        filename: uploadAudioSourceRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadAudioSourceRef.current.files [0].type}),\n        body: uploadAudioSourceRef.current.files [0]\n      })\n      set ('audioSource') (upload.id);\n      setAudioSourceUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const uploadCoverPhotoRef = useRef ();\n  const uploadAudioSourceRef = useRef ();\n\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n\n  if (!user) return '';\n  if (!page.startsWith ('/Clergymen/?page=edit-episode&id=')) return '';\n  if (!singleEpisode) return '';\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Episode\">Create Episode</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Episode</H2>\n        </header>\n        <section>\n          <H3>Episode Info</H3>\n          <div className=\"input-group\">\n            <label>Episode Title</label>\n            <input name=\"title\" value={get ('title')} onChange={set ('title')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Season Number</label>\n            <input name=\"seasonNumber\" type='number' value={get ('seasonNumber')} onChange={set ('seasonNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Episode Number</label>\n            <input name=\"episodeNumber\" type='number' value={get ('episodeNumber')} onChange={set ('episodeNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Short Description</label>\n            <input name=\"shortDescription\" value={get ('shortDescription')} onChange={set ('shortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"longDescription\" value={get ('longDescription')} onChange={set ('longDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Release Date (doesn't have to be final!)</label>\n            <input name=\"releaseDate\" type=\"date\" value={fmtDate (new Date (get ('releaseDate')))} onChange={set ('releaseDate')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Cover Photo</label>\n            {\n              !get ('coverPhoto') &&\n              <p onClick={clickCoverPhoto}>-- Upload Photo --</p>\n            }\n            {\n              !!get('coverPhoto') &&\n              <img src={coverPhotoUrl} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={uploadCoverPhotoRef} onChange={uploadCoverPhoto} />\n          </div>\n          <div className=\"input-group\">\n            <label>Audio File (mp3)</label>\n            {\n              !audioSourceUrl &&\n              <p onClick={clickAudioSource}>-- Upload Audio --</p>\n            }\n            {\n              audioSourceUrl &&\n              <audio src={audioSourceUrl} />\n            }\n            <input type=\"file\" accept=\"audio/mp3\" hidden ref={uploadAudioSourceRef} onChange={uploadAudioSource} />\n          </div>\n        </section>\n        <div className=\"button-group\">\n          <button onClick={submit}>Edit Episode</button>\n          <button onClick={() => deleteEpisode (singleEpisode.id)}>Delete Episode</button>\n        </div>\n      </div>\n    </main>\n  )\n\n}","import { useState } from \"react\"\n\nexport default function StringArrayInput ({onChange, defaultValue=[]}) {\n  const [array, setArray] = useState (defaultValue)\n  const set = index => e => {\n    let arr = [...array];\n    arr [index] = e.target.innerText;\n    setArray (arr);\n    onChange (arr);\n  }\n  const removeSection = index => () => {\n    let arr = [...array];\n    arr.splice (index, 1);\n    setArray (arr);\n    onChange (arr);\n  }\n  const addSection = () => {\n    let arr = [...array, ''];\n    setArray (arr);\n    onChange (arr);\n  }\n  return (\n    <>\n      {\n        array.map ((text, index) => (\n          <section>\n            <div contentEditable onBlur={set (index)} >{text}</div>\n            <button onClick={removeSection (index)}>Remove Section</button>\n          </section>\n        ))\n      }\n      <section>\n        <button onClick={addSection}>Add Section</button>\n      </section>\n    </>\n  )\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport { H1 } from \"../components/Headers\";\nimport StringArrayInput from \"../components/StringArrayInput\";\n\nexport default function About () {\n  const {router: {page}, auth: {user}, channel: {channelInfo, updateChannelInfo}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  const [editor, edit] = useState (false); \n\n  const {set, get, submit} = useForm (values => {\n    updateChannelInfo (values);\n    edit (false);\n  });\n\n  const imageRef = useRef ();\n  const [image, setImage] = useState (null);\n  useEffect (() => {\n    if (channelInfo && channelInfo.image && channelInfo.image.url) setImage (`https://d1q33inlkclwle.cloudfront.net/${channelInfo?.image?.url}`);\n  }, [channelInfo])\n\n  const clickImage = () => imageRef.current.click ();\n\n  const actuallyUploadImage = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: imageRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': imageRef.current.files [0].type}),\n        body: imageRef.current.files [0]\n      })\n      console.log (upload);\n      set ('image') (upload.id);\n      setImage (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  let routes = [\n    '/Clergymen/?page=admin',\n    '/Clergymen/?page=characters',\n    '/Clergymen/?page=contact',\n    '/Clergymen/?page=create-character',\n    '/Clergymen/?page=create-episode',\n    '/Clergymen/?page=edit-about',\n    '/Clergymen/?page=episodes',\n    '/Clergymen/?page=edit-episode',\n    '/Clergymen/?page=edit-character'\n  ]\n\n  if (!!routes.find (r => page.startsWith (r))) return null;\n  if (!channelInfo) return '';\n  if (editor) return (\n    <>\n      <div className=\"text-center\">\n        <H1>Edit Channel Info</H1>\n      </div>\n      <main onSubmit={e => e.preventDefault ()} className=\"about-container\">\n        <div className=\"about\">\n          <section className=\"about-input\">\n            <p>Title</p>\n            <input onChange={set ('title')} defaultValue={channelInfo.title} />\n          </section>\n          <section className=\"about-input\">\n            <p>Author</p>\n            <input onChange={set ('author')} defaultValue={channelInfo.author} />\n          </section>\n          <section className=\"about-input\">\n            <p>Copyright</p>\n            <input onChange={set ('copyright')} defaultValue={channelInfo.copyright} />\n          </section>\n          <section className=\"about-input\">\n            <p>Category</p>\n            <input onChange={set ('category')} defaultValue={channelInfo.category} />\n          </section>\n          <section className=\"about-input\">\n            <p>Subcategory</p>\n            <input onChange={set ('subcategory')} defaultValue={channelInfo.subcategory} />\n          </section>\n          <section className=\"about-input\">\n            <p>Channel Description</p>\n            <div className=\"string-input-array\">\n              <StringArrayInput onChange={set ('description')} defaultValue={channelInfo.description} />\n            </div>\n          </section>\n          <section className=\"about-input\">\n            <p>Image</p>\n            {\n              !image &&\n              <p onClick={clickImage}>-- Upload Photo --</p>\n            }\n            {\n              !!image &&\n              <img onClick={clickImage} src={image} />\n            }\n            <input ref={imageRef} onChange={actuallyUploadImage} type=\"file\" hidden accept=\".jpg, .jpeg, .png\" />\n          </section>\n          <section className=\"about-input\">\n            <button onClick={submit}>Submit Changes</button>\n          </section>\n        </div>\n      </main>\n    </>\n  )\n\n  return (\n    <main className=\"about-container\">\n      <div className=\"about\">\n        <section className=\"about-section\">\n          <H1>{channelInfo.title}</H1>\n          <div className=\"text-center\">\n            {\n              !!user &&\n              <a onClick={() => {edit (true)}}>Edit</a>\n            }\n          </div>\n          <div className=\"about-image\">\n            <img src={`https://d1q33inlkclwle.cloudfront.net/${channelInfo?.image?.url}`} />\n          </div>\n        </section>\n        <section className=\"about-section\">\n          {\n            Array.isArray (channelInfo.description) &&\n            channelInfo.description.map (text => <p className=\"about-text\">{text}</p>)\n          }\n        </section>\n      </div>\n    </main>\n  )\n}","import { useEffect, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\n\nexport default function SingleEpisode () {\n\n  const {router: {page}, episodes: {episodes}, setPodcast} = useApp ();\n\n  const [singleEpisode, setSingleEpisode] = useState (null);\n  useEffect (() => {\n    if (!page.startsWith ('/Clergymen/?page=episodes&id=')) return;\n    let eid = new URLSearchParams (window.location.search).get ('id');\n    let found = episodes.filter (episode => episode.id === eid);\n    console.log (eid, found);\n    setSingleEpisode (found.length ? found [0] : null);\n  }, [episodes, page]);\n\n  useEffect (() => {\n    console.log ('on episode found effect', singleEpisode);\n    if (singleEpisode !== null) setPodcast (singleEpisode) ();\n  }, [singleEpisode]);\n\n  if (!page.startsWith ('/Clergymen?page=episodes&id=')) return '';\n  if (!singleEpisode) return '';\n  return (\n    <div></div>\n  )\n\n}","import { useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport { H1, H2, H3 } from \"../components/Headers\";\n\nexport default function Contact () {\n  const {router: {page}, auth: {isAuthenticated}, contact: {messages, getMessages, sendMessage}, useForm} = useApp ();\n  \n  const [messageErr, setMessageErr] = useState (null);\n  const {set, get, submit} = useForm (values => {\n    if (!values.name) return setMessageErr ('Please enter your name!');\n    if (!values.to) return setMessageErr ('Please select a someone to message!');\n    if (!values.message) return setMessageErr ('Please enter a message to send us!');\n    if (!values.contact) return setMessageErr ('Please enter your contact information!');\n    sendMessage (values);\n  });\n    \n  if (page !== '/Clergymen/?page=contact') return '';\n  if (isAuthenticated) return (\n    <>\n      <div className=\"text-center\">\n        <H1>Messages</H1>\n      </div>\n      <main>\n        {\n          messages.map (message => (\n            <div>\n              <H3>Dear {message.to},</H3>\n              <p>{message.message}</p>\n              <p>Contact me at {message.contact}</p>\n              <p>Sincerely, {message.name}</p>\n            </div>\n          ))\n        }\n      </main>\n    </>\n  );\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Contact The Clergymen</H1>\n      </div>\n      <main>\n        {\n          messageErr &&\n          <div className=\"error\">{messageErr}</div>\n        }\n        <div className=\"form-group\">\n          <H3>Your Name:</H3>\n          <div contentEditable onBlur={e => set ('name') (e.target.innerText)}>{get ('name')}</div>\n        </div>\n        <div className=\"form-group\">\n          <H3>To:</H3>\n          <div contentEditable onBlur={e => set ('to') (e.target.innerText)}>{get ('to')}</div>\n        </div>\n        <div className=\"form-group\">\n          <H3>Message:</H3>\n          <div contentEditable onBlur={e => set ('message') (e.target.innerText)}>{get ('message')}</div>\n        </div>\n        <div className=\"form-group\">\n          <H3>Your Contact Info:</H3>\n          <div contentEditable onBlur={e => set ('contact') (e.target.innerText)}>{get ('contact')}</div>\n        </div>\n        <div className=\"form-group\">\n          <button onClick={submit}>Send Message</button>\n        </div>\n      </main>\n    </>\n  )\n}","import './App.css';\nimport Nav from './components/Nav';\nimport Auth from './pages/Auth';\nimport Characters from './pages/Characters';\nimport Episodes from './pages/Episodes';\nimport CreateCharacter from './pages/CreateCharacter';\nimport CreateEpisode from './pages/CreateEpisode';\nimport EditCharacter from './pages/EditCharacter';\nimport EditEpisode from './pages/EditEpisode';\nimport About from './pages/About';\nimport SingleEpisode from './pages/SingleEpisode';\nimport Contact from './pages/Contact';\n\nfunction App() {\n  return (\n    <>\n      <Nav/>\n      <Auth />\n      <About />\n      <Characters />\n      <CreateCharacter />\n      <EditCharacter />\n      <Episodes />\n      <SingleEpisode />\n      <EditEpisode />\n      <CreateEpisode />\n      <Contact />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AppProvider from './AppProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
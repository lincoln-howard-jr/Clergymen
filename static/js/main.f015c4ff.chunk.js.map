{"version":3,"sources":["img/pause.svg","img/play.svg","components/AudioPlayer.js","components/Headers.js","lib/poolDetails.js","lib/auth.js","hooks/index.js","hooks/newUseAuth.js","hooks/useCharacters.js","hooks/useForm.js","hooks/useRouter.js","hooks/useEpisodes.js","hooks/useChannelInfo.js","hooks/useContact.js","AppProvider.js","hooks/useUploads.js","img/nav.svg","components/Nav.js","pages/Auth.js","img/rotate.svg","pages/Characters.js","pages/Episodes.js","pages/CreateCharacter.js","pages/CreateEpisode.js","pages/EditCharacter.js","pages/EditEpisode.js","components/StringArrayInput.js","pages/About.js","pages/SingleEpisode.js","pages/Contact.js","App.js","index.js"],"names":["ts","seconds","Math","floor","slice","src","playing","title","togglePlay","photo","useState","width","setWidth","currTime","setCurrTime","duration","setDuration","smallPlayerOpen","setSmallPlayerOpen","audioRef","useRef","useEffect","current","play","pause","id","className","onClick","PauseSVG","PlaySVG","style","onTimeUpdate","e","currentTime","ref","autoPlay","H1","children","short","H2","H3","UserPoolId","ClientId","IdentityPoolId","AmazonCognitoIdentity","poolDetails","accessToken","headers","get","Headers","useAuth","onSessionActive","freeze","pool","getCurrentUser","user","setUser","setAccessToken","refreshToken","setRefreshToken","post","isAuthenticated","setIsAuthenticated","isFirstLogin","setIsFirstLogin","userAttributes","setUserAttributes","retrieveAccessTokens","a","getSession","error","session","Promise","reject","getAccessToken","getJwtToken","RefreshToken","getRefreshToken","getToken","resolve","refreshSession","err","login","Username","Password","details","_user","Pool","authenticateUser","onSuccess","onFailure","newPasswordRequired","attrs","email_verified","phone_number_verified","signOut","init","completePasswordChallenge","password","completeNewPasswordChallenge","useCharacters","characters","setCharacters","setErr","getCharacters","fetch","req","json","createCharacter","character","unfreeze","method","body","JSON","stringify","res","updateCharacter","deleteCharacter","useForm","onSubmit","v","console","log","defaultValues","validation","values","setValues","validationErrors","set","name","target","value","Object","assign","setAll","obj","status","validate","throwErr","errors","Error","submit","result","useRouter","window","location","href","split","origin","page","setPage","redirect","path","data","history","pushState","useEpisodes","episodes","setEpisodes","getEpisodes","createEpisode","deleteEpisode","useChannelInfo","channelInfo","setChannelInfo","getChannel","updateChannelInfo","channel","useContact","messages","setMessages","getMessages","sendMessage","AppContext","createContext","useApp","React","useContext","AppProvider","podcastId","setPodcastId","podcastSrc","setPodcastSrc","podcastTitle","setPodcastTitle","podcastCoverPhoto","setPodcastCoverPhoto","podcastPlaying","setPodcastPlaying","frozen","setFrozen","message","uploads","createUpload","upload","useUploads","router","contact","auth","Provider","setPodcast","episode","audioSource","url","coverPhoto","display","alignItems","justifyContent","backgroundColor","height","zIndex","position","left","top","padding","border","AudioPlayer","Nav","open","setOpen","overlayRef","rac","NavSVG","Auth","username","setUsername","setPassword","runLogin","type","placeholder","onChange","toString","Characters","flipped","setFlipped","map","includes","actorName","characterName","fl","filter","_id","RotateSVG","margin","actorLongDescription","characterLongDescription","characterPicture","actorPicture","Episodes","seasonNumber","episodeNumber","longDescription","CreateCharacter","characterPic","setCharacterPic","actorPic","setActorPic","characterPictureRef","actorPictureRef","clickCharacterPicture","click","clickActorPicture","actuallyUploadCharacterPicture","filename","files","contentType","uploadUrl","alert","actuallyUploadActorPicture","updateHeight","scrollHeight","startsWith","onFocus","onInput","accept","hidden","CreateEpisode","releaseDate","y","m","d","parseInt","Date","coverPhotoUrl","setCoverPhotoUrl","audioSourceUrl","setAudioSourceUrl","uploadCoverPhoto","uploadCoverPhotoRef","uploadAudioSource","uploadAudioSourceRef","EditCharacter","setCharacter","cid","URLSearchParams","find","c","getCharacter","val","char","defaultValue","characterShortDescription","actorShortDescription","fmtDate","getFullYear","getMonth","getDate","EditEpisode","updateEpisode","singleEpisode","setSingleEpisode","eid","search","found","length","StringArrayInput","array","setArray","index","arr","innerText","removeSection","splice","text","contentEditable","onBlur","About","editor","edit","imageRef","image","setImage","clickImage","actuallyUploadImage","r","preventDefault","author","copyright","category","subcategory","description","Array","isArray","SingleEpisode","Contact","messageErr","setMessageErr","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f015c4ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause.f4fa2300.svg\";","export default __webpack_public_path__ + \"static/media/play.c0a9fbaf.svg\";","import { useEffect, useRef, useState } from \"react\"\nimport PauseSVG from '../img/pause.svg'\nimport PlaySVG from '../img/play.svg'\n\nconst ts = seconds => `${Math.floor (seconds / 60)}:${('00' + Math.floor (seconds % 60)).slice (-2)}`;\n\nexport default function ({src, playing, title, togglePlay, photo}) {\n  const [width, setWidth] = useState ('0%');\n  const [currTime, setCurrTime] = useState (0);\n  const [duration, setDuration] = useState (0);\n  const [smallPlayerOpen, setSmallPlayerOpen] = useState (false);\n  const audioRef = useRef ();\n  const onProgress = e => {\n    setWidth (`${100 * (audioRef.current.currentTime / audioRef.current.duration)}%`);\n    setCurrTime (audioRef.current.currentTime);\n    setDuration (audioRef.current.duration);\n  }\n  useEffect (() => {\n    if (playing) audioRef.current.play ();\n    else audioRef.current.pause ();\n  }, [playing]);\n  return (\n    <footer id=\"audio-player\" className={smallPlayerOpen ? 'open' : ''}>\n      <section className=\"audio-player-container-small\">\n        <section className=\"audio-player-small-time\">\n          <span>  \n            {\n              ts (currTime)\n            } / {\n              ts (duration)\n            }\n            <span onClick={togglePlay} className=\"small-toggle-play\">\n              <img src={playing ? PauseSVG : PlaySVG} />\n            </span>\n          </span>\n        </section>\n        <span onClick={() => setSmallPlayerOpen (!smallPlayerOpen)} className=\"audio-player-small-image\">\n          <img src={photo} />\n        </span>\n      </section>\n      <section className=\"audio-player-container\">\n        <section className=\"audio-player-time\">\n          {\n            ts (currTime)\n          } / {\n            ts (duration)\n          }\n        </section>\n        <section className=\"audio-player-title\">{title}</section>\n        <section onClick={togglePlay} className=\"audio-player-image\">\n          <img src={photo} />\n          <img src={playing ? PauseSVG : PlaySVG} />\n        </section>\n        <section style={{width}} className=\"progress\" />\n      </section>\n      <audio onTimeUpdate={onProgress} ref={audioRef} src={src} autoPlay />\n    </footer>\n  )\n}","export function H1 ({children, short}) {\n  return (\n    <>\n      <h1>\n        {children}\n      </h1>\n      <h1 className=\"short\">\n        {short ? short : children}\n      </h1>\n    </>\n  )\n}\n\nexport function H2 ({children, short}) {\n  return (\n    <>\n      <h2>\n        {children}\n      </h2>\n      <h2 className=\"short\">\n        {short ? short : children}\n      </h2>\n    </>\n  )\n}\n\nexport function H3 ({children, short}) {\n  return (\n    <>\n      <h3>\n        {children}\n      </h3>\n      <h3 className=\"short\">\n        {short ? short : children}\n      </h3>\n    </>\n  )\n}\n\nexport function H4 ({children, short}) {\n  return (\n    <>\n      <h4>\n        {children}\n      </h4>\n      <h4 className=\"short\">\n        {short ? short : children}\n      </h4>\n    </>\n  )\n}\n\nexport function H5 ({children, short}) {\n  return (\n    <>\n      <h5>\n        {children}\n      </h5>\n      <h5 className=\"short\">\n        {short ? short : children}\n      </h5>\n    </>\n  )\n}\n\nexport function H6 ({children, short}) {\n  return (\n    <>\n      <h6>\n        {children}\n      </h6>\n      <h6 className=\"short\">\n        {short ? short : children}\n      </h6>\n    </>\n  )\n}","export default {\n  UserPoolId: 'us-east-1_UW4qNlUmI',\n  ClientId: '5kurv3o1l70p414j83ka7i16sc',\n  IdentityPoolId: 'us-east-1:2cc114d3-6d89-4f65-b6e5-0b2902209f61'\n}","import * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\nimport poolDetails from './poolDetails';\n\nlet authDetails = null;\nlet Pool = new AmazonCognitoIdentity.CognitoUserPool (poolDetails);\nlet cognitoUser = null;\nlet accessToken = null;\nlet refreshToken = null;\n\nexport const headers = {\n  get get () {\n    return new Headers ({\n      'x-amz-access-token': accessToken\n    });\n  },\n  get post () {\n    return new Headers ({\n      'x-amz-access-token': accessToken,\n      'Content-Type': 'application/json'\n    });\n  }\n}\nexport const login = (Username, Password) => new Promise ((resolve, reject) => {\n  try {\n    authDetails = new AmazonCognitoIdentity.AuthenticationDetails ({Username, Password});\n    cognitoUser = new AmazonCognitoIdentity.CognitoUser ({Username, Pool});\n    cognitoUser.authenticateUser (authDetails, {\n      onSuccess: () => resolve (),\n      onFailure: () => reject ()\n    })\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const getCurrentUser = () => new Promise ((resolve, reject) => {\n  try {\n    cognitoUser = Pool.getCurrentUser ();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const retrieveAccessToken = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cognito user must be defined to get access token';\n    cognitoUser.getSession ((e, session) => {\n      if (e) return reject (e);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const refreshSession = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cannot refresh empty cognito user';\n    if (!refreshToken) throw 'Cannot refresh empty refresh token';\n    cognitoUser.refreshSession (refreshToken, (err, session) => {\n      if (err) return reject (err);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const signOut = async () => new Promise (async (resolve, reject) => {\n  try {\n    await cognitoUser.signOut();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\n// export const register = async (Username, Password) => new Promise (async (resolve, reject) => {\n//   const customAttributeId = new AmazonCognitoIdentity.CognitoUserAttribute ({Name: 'custom:id', Value: id ()})\n//   const attributeList = [attributePhoneNumber, customAttributeId];\n//   Pool.signUp (Username, Password, attributeList, null, (err, result) => {\n//     if (err) return reject (err);\n//     cognitoUser = result.user;\n//     resolve ();\n//   })\n// });\n","// imports\nimport _useAuth from './newUseAuth';\nimport _useCharacters from './useCharacters';\nimport _useForm from './useForm';\nimport _router from './useRouter';\nimport _episodes from './useEpisodes';\nimport _channel from './useChannelInfo';\nimport _contact from './useContact';\n// exports\nexport const useAuth = _useAuth;\nexport const useCharacters = _useCharacters;\nexport const useForm = _useForm;\nexport const useRouter = _router;\nexport const useEpisodes = _episodes;\nexport const useChannelInfo = _channel;\nexport const useContact = _contact;","import { useState, useEffect } from \"react\";\nimport poolDetails from \"../lib/poolDetails\";\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\n\nexport default function useAuth (onSessionActive, freeze) {\n  // config\n  let pool = new AmazonCognitoIdentity.CognitoUserPool (poolDetails);\n  const [user, setUser] = useState (pool.getCurrentUser ());\n  // private state\n  const [accessToken, setAccessToken] = useState ('');\n  const [refreshToken, setRefreshToken] = useState (null);\n  const headers = {\n    get: {\n      'x-amz-access-token': accessToken\n    },\n    post: {\n      'Content-Type': 'application/json',\n      'x-amz-access-token': accessToken\n    }\n  };\n  \n  // public state mgmt\n  const [isAuthenticated, setIsAuthenticated] = useState (false);\n  const [isFirstLogin, setIsFirstLogin] = useState (false);\n  const [userAttributes, setUserAttributes] = useState (null);\n\n  // private method gets access and refresh tokens - call after authenticating\n  const retrieveAccessTokens = async () => {\n    if (user) user.getSession ((error, session) => {\n      if (error) return Promise.reject (error);\n      setAccessToken (session.getAccessToken ().getJwtToken ());\n      setRefreshToken (new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()}));\n      setIsAuthenticated (true);\n      return Promise.resolve ();\n    });\n    else return Promise.reject ('user dne');\n  };\n\n  // private method - refresh session should be called on init\n  const refreshSession = async () => {\n    if (user && refreshToken) user.refreshSession (refreshToken, err => {\n      if (err) return Promise.reject (err);\n      return retrieveAccessTokens ();\n    })\n  };\n\n  // public method - log user in with username/password\n  const login = async (Username, Password) => new Promise (async (resolve, reject) => {\n    let details = new AmazonCognitoIdentity.AuthenticationDetails ({Username, Password});\n    if (!user) {\n      let _user = new AmazonCognitoIdentity.CognitoUser ({Username, Pool: pool});\n      setUser (_user);\n      _user.authenticateUser (details, {\n        onSuccess: async () => {\n          resolve (await retrieveAccessTokens ())\n        },\n        onFailure: error => {\n          reject (error);\n        },\n        newPasswordRequired: attrs => {\n          delete attrs.email_verified;\n          delete attrs.phone_number_verified;\n          setUserAttributes (attrs);\n          setIsFirstLogin (true);\n        }\n      });\n    }\n  });\n\n  const completePasswordChallenge = password => {\n    user.completeNewPasswordChallenge (password, userAttributes, {\n      onSuccess: () => {\n        init ();\n      }\n    })\n  };\n  \n  // public sign out of account\n  const signOut = async () => new Promise (async (resolve, reject) => {\n    try {\n      await user.signOut();\n      resolve ();\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  // private method\n  async function init () {\n    await retrieveAccessTokens ();\n    await refreshSession ();\n  };\n\n  useEffect (() => {\n    init ();\n  }, []);\n\n  useEffect (() => {\n    if (isAuthenticated) onSessionActive ();\n  }, [isAuthenticated]);\n\n  return {headers, user, isAuthenticated, isFirstLogin, login, completePasswordChallenge, signOut};\n}","import { useEffect, useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useCharacters (freeze) {\n\n  // state management\n  const [characters, setCharacters] = useState ([]);\n  const [err, setErr] = useState (null);\n\n  // get all characters\n  const getCharacters = async () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters');\n      let characters = await req.json ();\n      setCharacters (characters);\n      resolve (characters);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    } \n  })\n\n  // mutators\n  const createCharacter = async character => new Promise (async (resolve, reject) => {\n    let unfreeze = freeze ();\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters', {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (character)\n      })\n      let res = await req.json ();\n      await getCharacters ();\n      resolve (res);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    } finally {\n      unfreeze ();\n    }\n  });\n\n  const updateCharacter = async (id, character) => new Promise (async (resolve, reject) => {\n    let unfreeze = freeze ();\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters/${id}`, {\n        method: 'PUT',\n        headers: headers.post,\n        body: JSON.stringify (character)\n      })\n      let res = await req.json ();\n      await getCharacters ();\n      resolve (res);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    } finally {\n      unfreeze ();\n    }\n  });\n\n  const deleteCharacter = async id => new Promise (async (resolve, reject) => {\n    let unfreeze = freeze ();\n    try {\n      await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/characters/${id}`, {\n        method: 'delete',\n        headers: headers.get\n      })\n      await getCharacters ();\n      resolve ();\n    } catch (e) {\n      reject (e);\n    } finally {\n      unfreeze ();\n    }\n  })\n\n  useEffect (() => {\n    getCharacters ();\n  }, []);\n\n  return {characters, err, getCharacters, createCharacter, updateCharacter, deleteCharacter};\n\n}","import { useState } from \"react\";\n\n//  onSubmit : async Function\n//    action performed on when form.submit is called\n//  defaultValues : Object\n//    the default values for the form\n//  validation : Object\n//    an object that maps field names to validation functions\nexport default function useForm (onSubmit=v=>console.log (v), defaultValues={}, validation={}) {\n\n  const [values, setValues] = useState (defaultValues);\n  const [validationErrors, setErr] = useState ({});\n\n  const set = name => (e) => {\n    if (e.target && e.target.value) return setValues (values => Object.assign (values, {[name]: e.target.value}));\n    setValues (values => Object.assign (values, {[name]: e}));\n  }\n\n  const setAll = obj => {\n    setValues (obj);\n  }\n\n  const get = name => {\n    return values [name];\n  }\n\n  const status = name => {\n    return validationErrors [name] ? 'invalid' : 'valid';\n  }\n\n  const validate = () => {\n    let throwErr = false;\n    for (const name in validation) {\n      validation [name] (values [name]) ?\n        setErr (errors => Object.assign (errors, {[name]: false}))\n        :\n        throwErr = true; setErr (errors => Object.assign (errors, {[name]: true}))\n      ;\n    }\n    if (throwErr) {\n      console.log (validationErrors);\n      throw new Error ('validation error');\n    }\n  }\n\n  const submit = async () => new Promise (async (resolve,reject) => {\n    try {\n      validate ();\n      let result = await onSubmit (values);\n      resolve (result);\n    } catch (e) {\n      reject (e);\n    }\n  });\n\n  return {set, setAll, get, status, submit};\n\n}","import { useState } from \"react\"\n\nexport default function useRouter () {\n  \n  const [page, setPage] = useState (window.location.href.split (window.location.origin) [1]);\n  \n  const redirect = (path, data={}) => () => {\n    setPage (path);\n    window.history.pushState (data, path, path);\n  }\n\n  return {page, redirect}\n}","import { useEffect, useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useEpisodes (freeze) {\n\n  // state management\n  const [episodes, setEpisodes] = useState ([]);\n\n  const getEpisodes = () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes`);\n      let data = await req.json ();\n      setEpisodes (data);\n      resolve (data);\n    } catch (e) {\n      reject (e);\n    }\n  })\n  \n  const createEpisode = body => new Promise (async (resolve, reject) => {\n    let unfreeze = freeze ();\n    try {\n      let req = await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes`, {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let data = await req.json ();\n      resolve (data);\n    } catch (e) {\n      reject (e);\n    } finally {\n      unfreeze ();\n    }\n  });\n\n  const deleteEpisode = id => new Promise (async (resolve, reject) => {\n    let unfreeze = freeze ();\n    try {\n      await fetch (`https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/episodes/${id}`, {\n        method: 'delete',\n        headers: headers.get\n      });\n      resolve ();\n    } catch (e) {\n      reject (e);\n    } finally {\n       unfreeze ()\n     }\n  });\n\n  useEffect (() => {\n    getEpisodes ();\n  }, []);\n\n  return {episodes, getEpisodes, createEpisode, deleteEpisode};\n\n}","import { useEffect, useState } from \"react\"\nimport { headers } from \"../lib/auth\";\n\nexport default function useUploads (freeze) {\n\n  const [channelInfo, setChannelInfo] = useState (null);\n  const [err, setErr] = useState (null);\n\n  const getChannel = async () => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/channel');\n      let data = await req.json ();\n      setChannelInfo (data);\n      resolve (data);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  const updateChannelInfo = body => new Promise (async (resolve, reject) => {\n    let unfreeze = freeze ();\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/channel', {\n        method: 'PUT',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let channel = await req.json ();\n      setChannelInfo (Object.assign (channelInfo, channel));\n      resolve ();\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    } finally {\n      unfreeze ();\n    }\n  });\n\n  useEffect (() => {\n    getChannel ();\n  }, []);\n\n  return {channelInfo, err, updateChannelInfo}\n}","import { useState } from \"react\";\nimport { headers } from \"../lib/auth\";\n\nexport default function useContact (freeze) {\n\n  const [messages, setMessages] = useState ([]);\n\n  const getMessages = async () => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/messages', {\n        headers: headers.get\n      });\n      let messages = await req.json ();\n      setMessages (messages);\n    } catch (e) {\n    } \n  }\n\n  const sendMessage = async body => new Promise (async (resolve, reject) => {\n    let unfreeze = freeze ('Sending your message!');\n    try {\n      await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/messages', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify (body)\n      })\n      resolve ();\n    } catch (e) {\n      reject (e);\n    } finally {\n      unfreeze ();\n    }\n  });\n\n  return {messages, getMessages, sendMessage}\n\n}","// create a context usable across the whole application\nimport React, { createContext, useState } from \"react\";\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport {H1} from './components/Headers';\nimport {useAuth, useCharacters, useForm, useRouter, useEpisodes, useChannelInfo, useContact} from './hooks';\nimport useUploads from \"./hooks/useUploads\";\n// react context api\nconst AppContext = createContext ();\nexport const useApp = () => React.useContext (AppContext);\n\n// the component\nexport default function AppProvider ({children}) {\n\n  // podcast player\n  const [podcastId, setPodcastId] = useState (null);\n  const [podcastSrc, setPodcastSrc] = useState (null);\n  const [podcastTitle, setPodcastTitle] = useState (null);\n  const [podcastCoverPhoto, setPodcastCoverPhoto] = useState (null);\n  const [podcastUpNext, setPodcastUpNext] = useState ([]);\n  const [podcastPlaying, setPodcastPlaying] = useState (true);\n\n  const togglePlay = () => setPodcastPlaying (!podcastPlaying);\n  const setPodcast = episode => e => {\n    setPodcastSrc (`https://d1q33inlkclwle.cloudfront.net/${episode.audioSource.url}`)\n    setPodcastCoverPhoto (`https://d1q33inlkclwle.cloudfront.net/${episode.coverPhoto.url}`);\n    setPodcastTitle (episode.title);\n    setPodcastId (episode.id);\n  }\n\n  // freeze/unfreeze animation\n  const [frozen, setFrozen] = useState (false);\n  const freeze = message => {\n    setFrozen (message);\n    return function unfreeze () {\n      setFrozen (false);\n    }\n  }\n\n  // hooks\n  const characters = useCharacters (freeze);\n  const episodes = useEpisodes (freeze);\n  const uploads = useUploads (freeze);\n  const router = useRouter (freeze);\n  const channel = useChannelInfo (freeze);\n  const contact = useContact (freeze);\n  // called when the user is authenticated\n  function onSessionActive () {\n    contact.getMessages ();\n  };\n  // auth hook\n  const auth = useAuth (onSessionActive, freeze);\n\n  // just wrap the whole app component in this\n  return (\n    <AppContext.Provider value={{router, auth, characters, uploads, episodes, channel, contact, podcastId, podcastPlaying, togglePlay, setPodcast, freeze, useForm}} >\n      <div style={{\n        display: (!frozen ? 'none' : 'grid'),\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ccccccaa',\n        width: '100vw',\n        height: '100vh',\n        zIndex: 10,\n        position: 'fixed',\n        left: 0,\n        top: 0\n      }}>\n        <span style={{backgroundColor: 'white', padding: 50, border: '1px solid black'}}>\n          {frozen === true ? '' : <H1>{frozen}</H1>}\n        </span>\n      </div>\n      {children}\n      {\n        !!podcastSrc &&\n        <AudioPlayer src={podcastSrc} title={podcastTitle} photo={podcastCoverPhoto} togglePlay={togglePlay} playing={podcastPlaying} />\n      }\n    </AppContext.Provider>\n  )\n}","import { useState } from \"react\"\nimport { headers } from \"../lib/auth\";\n\nexport default function useUploads () {\n\n  const [err, setErr] = useState (null);\n\n  const createUpload = body => new Promise (async (resolve, reject) => {\n    try {\n      let req = await fetch ('https://38uy900ohj.execute-api.us-east-1.amazonaws.com/Prod/uploads', {\n        method: 'post',\n        headers: headers.post,\n        body: JSON.stringify (body)\n      });\n      let upload = await req.json ();\n      resolve (upload);\n    } catch (e) {\n      setErr (e);\n      reject (e);\n    }\n  });\n\n  return {err, createUpload}\n}","export default __webpack_public_path__ + \"static/media/nav.de37125c.svg\";","import { useState, useRef } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport NavSVG from '../img/nav.svg';\n\nexport default function Nav () {\n  const {router: {redirect, page}} = useApp ();\n  const [open, setOpen] = useState (false);\n  const overlayRef = useRef ();\n  const close = e => {\n    if (e.target === overlayRef.current) {\n      setOpen (false);\n    }\n  }\n  const rac = path => e => {\n    redirect (path) ();\n    setOpen (false);\n  }\n  return (\n    <>\n      <nav onClick={() => setOpen (true)} id=\"nav\" className={open ? 'open' : ''}>\n        <img src={NavSVG} />\n      </nav>\n      <div id=\"nav-overlay\" ref={overlayRef} onClick={close}>\n        <ul>\n          <li onClick={rac ('/Clergymen/?page=about')}>About</li>\n          <li onClick={rac ('/Clergymen/?page=episodes')}>Episodes</li>\n          <li onClick={rac ('/Clergymen/?page=characters')}>Characters</li>\n          <li onClick={rac ('/Clergymen/?page=contact')}>Contact</li>\n        </ul>\n      </div>\n    </>\n  )\n}","import { useState } from 'react';\nimport {useApp} from '../AppProvider';\nimport { H2 } from '../components/Headers';\n\nfunction Auth () {\n  \n  const {router: {page}, auth: {isAuthenticated, isFirstLogin, login, completePasswordChallenge, signOut}} = useApp ();\n\n  const [username, setUsername] = useState ('');\n  const [password, setPassword] = useState ('');\n  const [err, setErr] = useState (null);\n  const runLogin = async e => {\n    try {\n      await login (username, password);\n      setUsername ('');\n      setPassword ('');\n    } catch (e) {\n      setErr (e?.message);\n    }\n  }\n  \n  if (page !== '/Clergymen/?page=admin') return '';\n  if (isFirstLogin) return (\n    <div>\n      <H2>Create New Password</H2>\n      <div className=\"input-group\">\n        <label>Password</label>\n        <input type=\"password\" value={password} placeholder=\"password\" onChange={e => setPassword (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <button onClick={() => completePasswordChallenge (password)}>Set New Password</button>\n      </div>\n    </div>\n  )\n  if (!isAuthenticated) return (\n    <main className=\"\">\n      <H2>Log In</H2>\n      {\n        err &&\n        <div className=\"input-group\">\n          <label>Error: {err.toString ()}</label>\n        </div>\n      }\n      <div className=\"input-group\">\n        <label>Username</label>\n        <input value={username} placeholder=\"Username\" onChange={e => setUsername (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <label>Password</label>\n        <input type=\"password\" value={password} placeholder=\"password\" onChange={e => setPassword (e.target.value)} />\n      </div>\n      <div className=\"input-group\">\n        <button onClick={runLogin}>Log In</button>\n      </div>\n    </main>\n  )\n  return (\n    <main className=\"\">\n      <div>\n        Click to <a onClick={signOut}>logout.</a>\n      </div>\n    </main>\n  )\n}\n\nexport default Auth","export default __webpack_public_path__ + \"static/media/rotate.6f436ac3.svg\";","import { useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H3} from '../components/Headers'\nimport RotateSVG from '../img/rotate.svg'\n\nexport default function Characters () {\n  \n  const {auth: {user}, router: {page, redirect}, characters: {characters}} = useApp ();\n\n  const [flipped, setFlipped] = useState ([]);\n\n  const flip = id => e => {\n    if (flipped.includes (id)) return setFlipped (fl => fl.filter (_id => _id !== id));\n    setFlipped (fl => [...fl, id]);\n  }\n\n  if (page !== '/Clergymen/?page=characters') return '';\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Characters:</H1>\n        {\n          user &&\n          <a onClick={redirect ('/Clergymen/?page=create-character')}>Add Character</a>\n        }\n      </div>\n      <main>\n        {\n          characters.map (character => (\n            <div className={flipped.includes (character.id) ? 'character-card actor' : \"character-card\"}>\n              <div className=\"character-played-by\">\n                <header>\n                  <H3 short={flipped.includes (character.id) ? character.actorName : character.characterName}>\n                    {flipped.includes (character.id) ? character.actorName : character.characterName}\n                  </H3>\n                  <img className=\"invert\" onClick={flip (character.id)} src={RotateSVG} />\n                </header>\n                <hr style={{margin: '25px 25%'}} />\n                {\n                  user &&\n                  <div className=\"text-center\">\n                    <a onClick={redirect (`/Clergymen/?page=edit-character&id=${character.id}`)}>Edit</a>\n                  </div>\n                }\n              </div>\n              <div className=\"character-info\">\n                <span>{flipped.includes (character.id) ? character.actorLongDescription : character.characterLongDescription}</span>\n              </div>\n              {\n                (!flipped.includes (character.id) && character.characterPicture && character.characterPicture.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://d1q33inlkclwle.cloudfront.net/${character.characterPicture.url}`} />\n                  </div>\n                )\n              }\n              {\n                (flipped.includes (character.id) && character.characterPicture && character.characterPicture.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://d1q33inlkclwle.cloudfront.net/${character.actorPicture.url}`} />\n                  </div>\n                )\n              }\n            </div>\n          ))\n        }\n      </main>\n    </>\n  )\n\n}","import { useApp } from \"../AppProvider\";\nimport {H1, H3} from '../components/Headers'\nimport PlaySVG from '../img/play.svg'\nimport PauseSVG from '../img/pause.svg'\n\nexport default function Episodes () {\n  \n  const {auth: {user}, router: {page, redirect}, episodes: {episodes}, setPodcast, podcastId, podcastPlaying, togglePlay} = useApp ();\n\n  if (page !== '/Clergymen/?page=episodes') return '';\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Episodes:</H1>\n        {\n          user &&\n          <a onClick={redirect ('/Clergymen/?page=create-episode')}>Add Episode</a>\n        }\n      </div>\n      <main>\n        {\n          episodes.map (episode => (\n            <div className=\"character-card\">\n              <div className=\"character-played-by\">\n                <header>\n                  <H3>{episode.title}{podcastId === episode.id && ' - Playing'}</H3>\n                  {\n                    podcastId === episode.id && podcastPlaying &&\n                    <img className=\"invert\" onClick={togglePlay} src={PauseSVG} />\n                  }\n                  {\n                    podcastId === episode.id && !podcastPlaying &&\n                    <img className=\"invert\" onClick={togglePlay} src={PlaySVG} />\n                  }\n                  {\n                    podcastId !== episode.id &&\n                    <img className=\"invert\" onClick={setPodcast (episode)} src={PlaySVG} />\n                  }\n                </header>\n                <hr style={{margin: '25px 25%'}} />\n                {\n                  user &&\n                  <div className=\"text-center\">\n                    <a onClick={redirect (`/Clergymen/?page=edit-episode&id=${episode.id}`)}>Edit</a>\n                  </div>\n                }\n              </div>\n              <div className=\"character-info\">\n                <H3 short={`S${episode.seasonNumber}, E${episode.episodeNumber}`}>Season {episode.seasonNumber}, Episode {episode.episodeNumber}</H3>\n                <span>{episode.longDescription}</span>\n              </div>\n              {\n                (episode.coverPhoto && episode.coverPhoto.url) &&\n                (\n                  <div className=\"character-image\">\n                    <img src={`https://d1q33inlkclwle.cloudfront.net/${episode.coverPhoto.url}`} />\n                  </div>\n                )\n              }\n            </div>\n          ))\n        }\n      </main>\n    </>\n  )\n\n}","import { useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function CreateCharacter () {\n  \n  const {auth: {user}, router: {page, redirect}, characters: {createCharacter}, uploads: {createUpload}, useForm, freeze} = useApp ();\n\n  const {set, get, status, submit} = useForm (createCharacter);\n  const [characterPic, setCharacterPic] = useState (false);\n  const [actorPic, setActorPic] = useState (false);\n  const characterPictureRef = useRef ();\n  const actorPictureRef = useRef ();\n\n  const clickCharacterPicture = async () => {\n    characterPictureRef.current.click ();\n  }\n\n  const clickActorPicture = async () => {\n    actorPictureRef.current.click ();\n  }\n\n  const actuallyUploadCharacterPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: characterPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': characterPictureRef.current.files [0].type}),\n        body: characterPictureRef.current.files [0]\n      })\n      console.log (upload);\n      set ('characterPicture') (upload.id);\n      setCharacterPic (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n    \n  const actuallyUploadActorPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: actorPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      console.log (upload);\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': actorPictureRef.current.files [0].type}),\n        body: actorPictureRef.current.files [0]\n      })\n      set ('actorPicture') (upload.id);\n      setActorPic (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n  if (!user) return '';\n  if (!page.startsWith ('/Clergymen/?page=create-character')) return '';\n\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Character\">Create Character</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Character</H2>\n        </header>\n        <section>\n          <H3>Character Info</H3>\n          <div className=\"input-group\">\n            <label>Character Name</label>\n            <input name=\"characterName\" value={get ('characterName')} onChange={set ('characterName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Short Description</label>\n            <input name=\"characterShortDescription\" value={get ('characterShortDescription')} onChange={set ('characterShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"characterLongDescription\" value={get ('characterLongDescription')} onChange={set ('characterLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Picture</label>\n            {\n              !characterPic &&\n              <p onClick={clickCharacterPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!characterPic &&\n              <img src={characterPic} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={characterPictureRef} onChange={actuallyUploadCharacterPicture} />\n          </div>\n        </section>\n        <section>\n          <H3>Actor Info</H3>\n          <div className=\"input-group\">\n            <label>Actor Name</label>\n            <input name=\"actorName\" value={get ('actorName')} onChange={set('actorName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Short Description</label>\n            <input name=\"actorShortDescription\" value={get ('actorShortDescription')} onChange={set ('actorShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"actorLongDescription\" value={get ('actorLongDescription')} onChange={set ('actorLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Picture</label>\n            {\n              !actorPic &&\n              <p onClick={clickActorPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!actorPic &&\n              <img src={actorPic} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={actorPictureRef} onChange={actuallyUploadActorPicture} />\n          </div>\n        </section>\n        <button onClick={submit}>Add Character</button>\n      </div>\n    </main>\n  )\n\n}","import { useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function CreateEpisode () {\n\n  const {router: {page}, auth: {user}, episodes: {createEpisode}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  const {get, set, submit} = useForm (values => {\n    let [y, m, d] = values.releaseDate.split ('-');\n    let body = Object.assign (values, {\n      episodeNumber: parseInt (values.episodeNumber),\n      seasonNumber: parseInt (values.seasonNumber),\n      releaseDate: new Date (y, m, d)\n    })\n    createEpisode (body);\n  });\n  const [coverPhotoUrl, setCoverPhotoUrl] = useState (null);\n  const [audioSourceUrl, setAudioSourceUrl] = useState (null);\n\n  const clickCoverPhoto = () => uploadCoverPhotoRef.current.click ();\n  const uploadCoverPhoto = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: uploadCoverPhotoRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadCoverPhotoRef.current.files [0].type}),\n        body: uploadCoverPhotoRef.current.files [0]\n      })\n      set ('coverPhoto') (upload.id);\n      setCoverPhotoUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const clickAudioSource = () => uploadAudioSourceRef.current.click ();\n  const uploadAudioSource = async e => {\n    let unfreeze = freeze ('Uploading Podcast Audio - This May Take A Second!');\n    try {\n      let upload = await createUpload ({\n        filename: uploadAudioSourceRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadAudioSourceRef.current.files [0].type}),\n        body: uploadAudioSourceRef.current.files [0]\n      })\n      set ('audioSource') (upload.id);\n      setAudioSourceUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const uploadCoverPhotoRef = useRef ();\n  const uploadAudioSourceRef = useRef ();\n\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n  if (!user) return '';\n  if (page !== '/Clergymen/?page=create-episode') return '';\n  \n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Episode\">Create Episode</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Episode</H2>\n        </header>\n        <section>\n          <H3>Episode Info</H3>\n          <div className=\"input-group\">\n            <label>Episode Title</label>\n            <input name=\"title\" value={get ('title')} onChange={set ('title')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Season Number</label>\n            <input name=\"seasonNumber\" type='number' value={get ('seasonNumber')} onChange={set ('seasonNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Episode Number</label>\n            <input name=\"episodeNumber\" type='number' value={get ('episodeNumber')} onChange={set ('episodeNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Short Description</label>\n            <input name=\"shortDescription\" value={get ('shortDescription')} onChange={set ('shortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"longDescription\" value={get ('longDescription')} onChange={set ('longDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Release Date (doesn't have to be final!)</label>\n            <input name=\"releaseDate\" type=\"date\" value={get ('releaseDate')} onChange={set ('releaseDate')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Cover Photo</label>\n            {\n              !get ('coverPhoto') &&\n              <p onClick={clickCoverPhoto}>-- Upload Photo --</p>\n            }\n            {\n              !!get('coverPhoto') &&\n              <img src={coverPhotoUrl} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={uploadCoverPhotoRef} onChange={uploadCoverPhoto} />\n          </div>\n          <div className=\"input-group\">\n            <label>Audio File (mp3)</label>\n            {\n              !get ('audioSource') &&\n              <p onClick={clickAudioSource}>-- Upload Audio --</p>\n            }\n            {\n              !!get('audioSource') &&\n              <audio src={audioSourceUrl} />\n            }\n            <input type=\"file\" accept=\"audio/mp3\" hidden ref={uploadAudioSourceRef} onChange={uploadAudioSource} />\n          </div>\n        </section>\n        <button onClick={submit}>Add Episode</button>\n      </div>\n    </main>\n  )\n\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nexport default function EditCharacter () {\n  \n  const {auth: {isAuthenticated}, router: {page, redirect}, characters: {characters, updateCharacter, deleteCharacter}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  \n  const [character, setCharacter] = useState (null);\n  const getCharacter = () => {\n    let params = new URLSearchParams (page.split ('?') [1]);\n    let cid = params.get ('id');\n    setCharacter (characters.find (c => c.id === cid));\n  }\n  useEffect (() => {\n    getCharacter ();\n  }, [characters, page])\n  const {set, submit} = useForm (async val => {\n    await updateCharacter (character.id, val);\n    redirect ('/Clergymen/?page=characters');\n  });\n  const characterPictureRef = useRef ();\n  const actorPictureRef = useRef ();\n\n  const clickCharacterPicture = async () => {\n    characterPictureRef.current.click ();\n  }\n\n  const clickActorPicture = async () => {\n    actorPictureRef.current.click ();\n  }\n\n  const actuallyUploadCharacterPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: characterPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': characterPictureRef.current.files [0].type}),\n        body: characterPictureRef.current.files [0]\n      })\n      console.log (upload);\n      set ('characterPicture') (upload.id);\n      setCharacter (char => Object.assign (char, {characterPicture: {url: `https://d1q33inlkclwle.cloudfront.net/${upload.url}`}}))\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n    \n  const actuallyUploadActorPicture = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: actorPictureRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      console.log (upload);\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': actorPictureRef.current.files [0].type}),\n        body: actorPictureRef.current.files [0]\n      })\n      set ('actorPicture') (upload.id);\n      setCharacter (char => Object.assign (char, {actorPicture: {url: `https://d1q33inlkclwle.cloudfront.net/${upload.url}`}}))\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  if (!isAuthenticated) return null;\n  if (!character) return null;\n  if (!page.startsWith ('/Clergymen/?page=edit-character')) return null;\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short='Edit'>Edit {character.characterName}</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>{character.characterName}/{character.actorName}</H2>\n        </header>\n        <section>\n          <H3>Character Info</H3>\n          <div className=\"input-group\">\n            <label>Character Name</label>\n            <input name=\"characterName\" defaultValue={character.characterName} onChange={set ('characterName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Short Description</label>\n            <input name=\"characterShortDescription\" defaultValue={character.characterShortDescription} onChange={set ('characterShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Long Description</label>\n            <textarea name=\"characterLongDescription\" defaultValue={character.characterLongDescription} onChange={set ('characterLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Character Picture</label>\n            {\n              !character.characterPicture &&\n              <p onClick={clickCharacterPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!character.characterPicture &&\n              <div className=\"circle-image-container\">\n                <img onClick={clickCharacterPicture} src={`https://d1q33inlkclwle.cloudfront.net/${character.characterPicture.url}`} />\n              </div>\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={characterPictureRef} onChange={actuallyUploadCharacterPicture} />\n          </div>\n        </section>\n        <section>\n          <H3>Actor Info</H3>\n          <div className=\"input-group\">\n            <label>Actor Name</label>\n            <input name=\"actorName\" defaultValue={character.actorName} onChange={set('actorName')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Short Description</label>\n            <input name=\"actorShortDescription\" defaultValue={character.actorShortDescription} onChange={set ('actorShortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Long Description</label>\n            <textarea name=\"actorLongDescription\" defaultValue={character.actorLongDescription} onChange={set ('actorLongDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Actor Picture</label>\n            {\n              !character.actorPicture &&\n              <p onClick={clickActorPicture}>-- Upload Photo --</p>\n            }\n            {\n              !!character.actorPicture &&\n              <div className=\"circle-image-container\">\n                <img onClick={clickActorPicture} src={`https://d1q33inlkclwle.cloudfront.net/${character.actorPicture.url}`} />\n              </div>\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={actorPictureRef} onChange={actuallyUploadActorPicture} />\n          </div>\n        </section>\n        <div className=\"button-group\">\n          <button onClick={submit}>Submit Changes</button>\n          <button onClick={async () => {\n            try {\n              await deleteCharacter (character.id)\n              redirect ('/Clergymen/?page=characters')\n            } catch (e) {\n            }\n          }}>Delete Character</button>\n        </div>\n      </div>\n    </main>\n  )\n\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport {H1, H2, H3} from '../components/Headers'\n\nconst fmtDate = (d=new Date ()) => {\n  return `${d.getFullYear ()}-${('00' + d.getMonth ()).slice (-2)}-${('00' + d.getDate ()).slice (-2)}`\n}\n\nexport default function EditEpisode () {\n  \n  const {auth: {user}, router: {page}, uploads: {createUpload}, episodes: {episodes, updateEpisode, deleteEpisode}, useForm, freeze} = useApp ();\n  \n  const [singleEpisode, setSingleEpisode] = useState (null);\n\n  const {get, set, submit, setAll} = useForm (val => updateEpisode (singleEpisode.id, val));\n\n  useEffect (() => {\n    let eid = new URLSearchParams (window.location.search).get ('id');\n    let found = episodes.filter (episode => episode.id === eid);\n    setSingleEpisode (found.length ? found [0] : null);\n  }, [episodes, page]);\n\n  useEffect (() => {\n    if (singleEpisode) {\n      setAll (singleEpisode);\n      setCoverPhotoUrl (`https://d1q33inlkclwle.cloudfront.net/${singleEpisode.coverPhoto.url}`)\n      setAudioSourceUrl (`https://d1q33inlkclwle.cloudfront.net/${singleEpisode.audioSource.url}`)\n    }\n  }, [singleEpisode]);\n  \n  const [coverPhotoUrl, setCoverPhotoUrl] = useState (null);\n  const [audioSourceUrl, setAudioSourceUrl] = useState (null);\n\n  const clickCoverPhoto = () => uploadCoverPhotoRef.current.click ();\n  const uploadCoverPhoto = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: uploadCoverPhotoRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadCoverPhotoRef.current.files [0].type}),\n        body: uploadCoverPhotoRef.current.files [0]\n      })\n      set ('coverPhoto') (upload.id);\n      setCoverPhotoUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const clickAudioSource = () => uploadAudioSourceRef.current.click ();\n  const uploadAudioSource = async e => {\n    let unfreeze = freeze ('Uploading Podcast Audio - This May Take A Second!');\n    try {\n      let upload = await createUpload ({\n        filename: uploadAudioSourceRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': uploadAudioSourceRef.current.files [0].type}),\n        body: uploadAudioSourceRef.current.files [0]\n      })\n      set ('audioSource') (upload.id);\n      setAudioSourceUrl (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  const uploadCoverPhotoRef = useRef ();\n  const uploadAudioSourceRef = useRef ();\n\n  const updateHeight = e => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  }\n\n  if (!user) return '';\n  if (!page.startsWith ('/Clergymen/?page=edit-episode&id=')) return '';\n  if (!singleEpisode) return '';\n  return (\n    <main>\n      <div className=\"text-center\">\n        <H1 short=\"Episode\">Create Episode</H1>\n      </div>\n      <div className=\"form\">\n        <header>\n          <H2>Add Episode</H2>\n        </header>\n        <section>\n          <H3>Episode Info</H3>\n          <div className=\"input-group\">\n            <label>Episode Title</label>\n            <input name=\"title\" value={get ('title')} onChange={set ('title')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Season Number</label>\n            <input name=\"seasonNumber\" type='number' value={get ('seasonNumber')} onChange={set ('seasonNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Episode Number</label>\n            <input name=\"episodeNumber\" type='number' value={get ('episodeNumber')} onChange={set ('episodeNumber')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Short Description</label>\n            <input name=\"shortDescription\" value={get ('shortDescription')} onChange={set ('shortDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Long Description</label>\n            <textarea onFocus={updateHeight} onInput={updateHeight} name=\"longDescription\" value={get ('longDescription')} onChange={set ('longDescription')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Release Date (doesn't have to be final!)</label>\n            <input name=\"releaseDate\" type=\"date\" value={fmtDate (new Date (get ('releaseDate')))} onChange={set ('releaseDate')} />\n          </div>\n          <div className=\"input-group\">\n            <label>Cover Photo</label>\n            {\n              !get ('coverPhoto') &&\n              <p onClick={clickCoverPhoto}>-- Upload Photo --</p>\n            }\n            {\n              !!get('coverPhoto') &&\n              <img src={coverPhotoUrl} />\n            }\n            <input type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" hidden ref={uploadCoverPhotoRef} onChange={uploadCoverPhoto} />\n          </div>\n          <div className=\"input-group\">\n            <label>Audio File (mp3)</label>\n            {\n              !audioSourceUrl &&\n              <p onClick={clickAudioSource}>-- Upload Audio --</p>\n            }\n            {\n              audioSourceUrl &&\n              <audio src={audioSourceUrl} />\n            }\n            <input type=\"file\" accept=\"audio/mp3\" hidden ref={uploadAudioSourceRef} onChange={uploadAudioSource} />\n          </div>\n        </section>\n        <div className=\"button-group\">\n          <button onClick={submit}>Edit Episode</button>\n          <button onClick={() => deleteEpisode (singleEpisode.id)}>Delete Episode</button>\n        </div>\n      </div>\n    </main>\n  )\n\n}","import { useState } from \"react\"\n\nexport default function StringArrayInput ({onChange, defaultValue=[]}) {\n  const [array, setArray] = useState (defaultValue)\n  const set = index => e => {\n    let arr = [...array];\n    arr [index] = e.target.innerText;\n    setArray (arr);\n    onChange (arr);\n  }\n  const removeSection = index => () => {\n    let arr = [...array];\n    arr.splice (index, 1);\n    setArray (arr);\n    onChange (arr);\n  }\n  const addSection = () => {\n    let arr = [...array, ''];\n    setArray (arr);\n    onChange (arr);\n  }\n  return (\n    <>\n      {\n        array.map ((text, index) => (\n          <section>\n            <div contentEditable onBlur={set (index)} >{text}</div>\n            <button onClick={removeSection (index)}>Remove Section</button>\n          </section>\n        ))\n      }\n      <section>\n        <button onClick={addSection}>Add Section</button>\n      </section>\n    </>\n  )\n}","import { useEffect, useRef, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport { H1 } from \"../components/Headers\";\nimport StringArrayInput from \"../components/StringArrayInput\";\n\nexport default function About () {\n  const {router: {page}, auth: {user}, channel: {channelInfo, updateChannelInfo}, uploads: {createUpload}, useForm, freeze} = useApp ();\n  const [editor, edit] = useState (false); \n\n  const {set, get, submit} = useForm (values => {\n    updateChannelInfo (values);\n    edit (false);\n  });\n\n  const imageRef = useRef ();\n  const [image, setImage] = useState (null);\n  useEffect (() => {\n    if (channelInfo && channelInfo.image && channelInfo.image.url) setImage (`https://d1q33inlkclwle.cloudfront.net/${channelInfo?.image?.url}`);\n  }, [channelInfo])\n\n  const clickImage = () => imageRef.current.click ();\n\n  const actuallyUploadImage = async e => {\n    let unfreeze = freeze ('Uploading Photo');\n    try {\n      let upload = await createUpload ({\n        filename: imageRef.current.files [0].name,\n        contentType: e.target.files [0].type\n      });\n      await fetch (upload.uploadUrl, {\n        method: 'put',\n        headers: new Headers ({'Content-Type': imageRef.current.files [0].type}),\n        body: imageRef.current.files [0]\n      })\n      console.log (upload);\n      set ('image') (upload.id);\n      setImage (`https://d1q33inlkclwle.cloudfront.net/${upload.url}`);\n      unfreeze ();\n    } catch (e) {\n      console.log (e);\n      alert ('error while uploading - please try again');\n      unfreeze ();\n    }\n  }\n\n  let routes = [\n    '/Clergymen/?page=admin',\n    '/Clergymen/?page=characters',\n    '/Clergymen/?page=contact',\n    '/Clergymen/?page=create-character',\n    '/Clergymen/?page=create-episode',\n    '/Clergymen/?page=edit-about',\n    '/Clergymen/?page=episodes',\n    '/Clergymen/?page=edit-episode',\n    '/Clergymen/?page=edit-character'\n  ]\n\n  if (!!routes.find (r => page.startsWith (r))) return null;\n  if (!channelInfo) return '';\n  if (editor) return (\n    <>\n      <div className=\"text-center\">\n        <H1>Edit Channel Info</H1>\n      </div>\n      <main onSubmit={e => e.preventDefault ()} className=\"about-container\">\n        <div className=\"about\">\n          <section className=\"about-input\">\n            <p>Title</p>\n            <input onChange={set ('title')} defaultValue={channelInfo.title} />\n          </section>\n          <section className=\"about-input\">\n            <p>Author</p>\n            <input onChange={set ('author')} defaultValue={channelInfo.author} />\n          </section>\n          <section className=\"about-input\">\n            <p>Copyright</p>\n            <input onChange={set ('copyright')} defaultValue={channelInfo.copyright} />\n          </section>\n          <section className=\"about-input\">\n            <p>Category</p>\n            <input onChange={set ('category')} defaultValue={channelInfo.category} />\n          </section>\n          <section className=\"about-input\">\n            <p>Subcategory</p>\n            <input onChange={set ('subcategory')} defaultValue={channelInfo.subcategory} />\n          </section>\n          <section className=\"about-input\">\n            <p>Channel Description</p>\n            <div className=\"string-input-array\">\n              <StringArrayInput onChange={set ('description')} defaultValue={channelInfo.description} />\n            </div>\n          </section>\n          <section className=\"about-input\">\n            <p>Image</p>\n            {\n              !image &&\n              <p onClick={clickImage}>-- Upload Photo --</p>\n            }\n            {\n              !!image &&\n              <img onClick={clickImage} src={image} />\n            }\n            <input ref={imageRef} onChange={actuallyUploadImage} type=\"file\" hidden accept=\".jpg, .jpeg, .png\" />\n          </section>\n          <section className=\"about-input\">\n            <button onClick={submit}>Submit Changes</button>\n          </section>\n        </div>\n      </main>\n    </>\n  )\n\n  return (\n    <main className=\"about-container\">\n      <div className=\"about\">\n        <section className=\"about-section\">\n          <H1>{channelInfo.title}</H1>\n          <div className=\"text-center\">\n            {\n              !!user &&\n              <a onClick={() => {edit (true)}}>Edit</a>\n            }\n          </div>\n          <div className=\"about-image\">\n            <img src={`https://d1q33inlkclwle.cloudfront.net/${channelInfo?.image?.url}`} />\n          </div>\n        </section>\n        <section className=\"about-section\">\n          {\n            Array.isArray (channelInfo.description) &&\n            channelInfo.description.map (text => <p className=\"about-text\">{text}</p>)\n          }\n        </section>\n      </div>\n    </main>\n  )\n}","import { useEffect, useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\n\nexport default function SingleEpisode () {\n\n  const {router: {page}, episodes: {episodes}, setPodcast} = useApp ();\n\n  const [singleEpisode, setSingleEpisode] = useState (null);\n  useEffect (() => {\n    if (!page.startsWith ('/Clergymen/?page=episodes&id=')) return;\n    let eid = new URLSearchParams (window.location.search).get ('id');\n    let found = episodes.filter (episode => episode.id === eid);\n    console.log (eid, found);\n    setSingleEpisode (found.length ? found [0] : null);\n  }, [episodes, page]);\n\n  useEffect (() => {\n    console.log ('on episode found effect', singleEpisode);\n    if (singleEpisode !== null) setPodcast (singleEpisode) ();\n  }, [singleEpisode]);\n\n  if (!page.startsWith ('/Clergymen?page=episodes&id=')) return '';\n  if (!singleEpisode) return '';\n  return (\n    <div></div>\n  )\n\n}","import { useState } from \"react\";\nimport { useApp } from \"../AppProvider\";\nimport { H1, H2, H3 } from \"../components/Headers\";\n\nexport default function Contact () {\n  const {router: {page}, auth: {isAuthenticated}, contact: {messages, getMessages, sendMessage}, useForm} = useApp ();\n  \n  const [messageErr, setMessageErr] = useState (null);\n  const {set, get, submit} = useForm (values => {\n    if (!values.name) return setMessageErr ('Please enter your name!');\n    if (!values.to) return setMessageErr ('Please select a someone to message!');\n    if (!values.message) return setMessageErr ('Please enter a message to send us!');\n    if (!values.contact) return setMessageErr ('Please enter your contact information!');\n    sendMessage (values);\n  });\n    \n  if (page !== '/Clergymen/?page=contact') return '';\n  if (isAuthenticated) return (\n    <>\n      <div className=\"text-center\">\n        <H1>Messages</H1>\n      </div>\n      <main className=\"contact-page\">\n        {\n          messages.map (message => (\n            <div className=\"contact-message\">\n              <H3>Dear {message.to},</H3>\n              <p>{message.message}</p>\n              <p>Contact me at {message.contact}</p>\n              <p>Sincerely, {message.name}</p>\n            </div>\n          ))\n        }\n      </main>\n    </>\n  );\n  return (\n    <>\n      <div className=\"text-center\">\n        <H1>Contact The Clergymen</H1>\n      </div>\n      <main className=\"contact-page\">\n        {\n          messageErr &&\n          <div className=\"error\">{messageErr}</div>\n        }\n        <div className=\"form-group\">\n          <H3>Your Name:</H3>\n          <div contentEditable onBlur={e => set ('name') (e.target.innerText)}>{get ('name')}</div>\n        </div>\n        <div className=\"form-group\">\n          <H3>Your Contact Info:</H3>\n          <div contentEditable onBlur={e => set ('contact') (e.target.innerText)}>{get ('contact')}</div>\n        </div>\n        <div className=\"form-group\">\n          <H3>Message:</H3>\n          <div contentEditable onBlur={e => set ('message') (e.target.innerText)}>{get ('message')}</div>\n        </div>\n        <div className=\"form-group\">\n          <button onClick={submit}>Send Message</button>\n        </div>\n      </main>\n    </>\n  )\n}","import './App.css';\nimport Nav from './components/Nav';\nimport Auth from './pages/Auth';\nimport Characters from './pages/Characters';\nimport Episodes from './pages/Episodes';\nimport CreateCharacter from './pages/CreateCharacter';\nimport CreateEpisode from './pages/CreateEpisode';\nimport EditCharacter from './pages/EditCharacter';\nimport EditEpisode from './pages/EditEpisode';\nimport About from './pages/About';\nimport SingleEpisode from './pages/SingleEpisode';\nimport Contact from './pages/Contact';\n\nfunction App() {\n  return (\n    <>\n      <Nav/>\n      <Auth />\n      <About />\n      <Characters />\n      <CreateCharacter />\n      <EditCharacter />\n      <Episodes />\n      <SingleEpisode />\n      <EditEpisode />\n      <CreateEpisode />\n      <Contact />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AppProvider from './AppProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}